{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "name" : "TIDAL Developer - Discussions",
      "url" : "https://github.com/orgs/tidal-music/discussions"
    },
    "description" : "TIDAL API is a [JSON:API](https://jsonapi.org/) Web API that gives access to TIDAL functionality and data.",
    "termsOfService" : "https://developer.tidal.com/documentation/guidelines/guidelines-overview",
    "title" : "TIDAL API - Beta",
    "version" : "0.1.64"
  },
  "externalDocs" : {
    "description" : "TIDAL Developer - Documentation",
    "url" : "https://developer.tidal.com/documentation"
  },
  "servers" : [ {
    "url" : "https://openapi.tidal.com/v2",
    "description" : "Production"
  } ],
  "tags" : [ {
    "name" : "albums"
  }, {
    "name" : "artistBiographies"
  }, {
    "name" : "artistClaims"
  }, {
    "name" : "artistRoles"
  }, {
    "name" : "artists"
  }, {
    "name" : "artworks"
  }, {
    "name" : "genres"
  }, {
    "name" : "lyrics"
  }, {
    "name" : "playlists"
  }, {
    "name" : "providers"
  }, {
    "name" : "searchResults"
  }, {
    "name" : "searchSuggestions"
  }, {
    "name" : "trackFiles"
  }, {
    "name" : "trackManifests"
  }, {
    "name" : "trackSourceFiles"
  }, {
    "name" : "trackStatistics"
  }, {
    "name" : "tracks"
  }, {
    "name" : "userCollections"
  }, {
    "name" : "userEntitlements"
  }, {
    "name" : "userRecommendations"
  }, {
    "name" : "userReports"
  }, {
    "name" : "users"
  }, {
    "name" : "videos"
  } ],
  "paths" : {
    "/albums" : {
      "get" : {
        "description" : "Retrieves multiple albums by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists, coverArt, genres, items, owners, providers, similarAlbums",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        }, {
          "description" : "User id",
          "example" : "123456",
          "in" : "query",
          "name" : "filter[owners.id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "123456"
            }
          }
        }, {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "251380836"
            }
          }
        }, {
          "description" : "Barcode Id",
          "example" : "196589525444",
          "in" : "query",
          "name" : "filter[barcodeId]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "196589525444"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get multiple albums.",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Creates a new album.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlbumCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single album.",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/albums/{id}" : {
      "delete" : {
        "description" : "Deletes existing album.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Delete single album.",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "get" : {
        "description" : "Retrieves single album by id.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists, coverArt, genres, items, owners, providers, similarAlbums",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single album.",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates existing album.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single album.",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/albums/{id}/relationships/artists" : {
      "get" : {
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get artists relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/coverArt" : {
      "get" : {
        "description" : "Retrieves coverArt relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt",
          "example" : "coverArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get coverArt relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates coverArt relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlbumCoverArtRelationshipUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update coverArt relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/albums/{id}/relationships/genres" : {
      "get" : {
        "description" : "Retrieves genres relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: genres",
          "example" : "genres",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "genres"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get genres relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/albums/{id}/relationships/items" : {
      "get" : {
        "description" : "Retrieves items relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: items",
          "example" : "items",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Items_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get items relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/providers" : {
      "get" : {
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "example" : "providers",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get providers relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/similarAlbums" : {
      "get" : {
        "description" : "Retrieves similarAlbums relationship.",
        "parameters" : [ {
          "description" : "Album id",
          "example" : "251380836",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarAlbums",
          "example" : "similarAlbums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarAlbums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get similarAlbums relationship (\"to-many\").",
        "tags" : [ "albums" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artistBiographies" : {
      "get" : {
        "description" : "Retrieves multiple artistBiographies by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1566"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistBiographies_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple artistBiographies.",
        "tags" : [ "artistBiographies" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistBiographies/{id}" : {
      "get" : {
        "description" : "Retrieves single artistBiographie by id.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistBiographies_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single artistBiographie.",
        "tags" : [ "artistBiographies" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "patch" : {
        "description" : "Updates existing artistBiographie.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistBiographyUpdateBody"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single artistBiographie.",
        "tags" : [ "artistBiographies" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistBiographies/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistBiographies_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "artistBiographies" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistClaims" : {
      "post" : {
        "description" : "Creates a new artistClaim.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistClaimsCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistClaims_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single artistClaim.",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistClaims/{id}" : {
      "get" : {
        "description" : "Retrieves single artistClaim by id.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: acceptedArtists, owners, recommendedArtists",
          "example" : "acceptedArtists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "acceptedArtists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistClaims_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get single artistClaim.",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "patch" : {
        "description" : "Updates existing artistClaim.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistClaimsUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single artistClaim.",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistClaims/{id}/relationships/acceptedArtists" : {
      "get" : {
        "description" : "Retrieves acceptedArtists relationship.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: acceptedArtists",
          "example" : "acceptedArtists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "acceptedArtists"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistClaims_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get acceptedArtists relationship (\"to-many\").",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "patch" : {
        "description" : "Updates acceptedArtists relationship.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistClaimAcceptedArtistsRelationshipUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update acceptedArtists relationship (\"to-many\").",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistClaims/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistClaims_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistClaims/{id}/relationships/recommendedArtists" : {
      "get" : {
        "description" : "Retrieves recommendedArtists relationship.",
        "parameters" : [ {
          "description" : "Artist claim id",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: recommendedArtists",
          "example" : "recommendedArtists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "recommendedArtists"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistClaims_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get recommendedArtists relationship (\"to-many\").",
        "tags" : [ "artistClaims" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artistRoles" : {
      "get" : {
        "description" : "Retrieves multiple artistRoles by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "example" : "1",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistRoles_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple artistRoles.",
        "tags" : [ "artistRoles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artistRoles/{id}" : {
      "get" : {
        "description" : "Retrieves single artistRole by id.",
        "parameters" : [ {
          "description" : "Artist role id",
          "example" : "1",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistRoles_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single artistRole.",
        "tags" : [ "artistRoles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists" : {
      "get" : {
        "description" : "Retrieves multiple artists by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, biography, owners, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "Artist handle",
          "example" : "jayz",
          "in" : "query",
          "name" : "filter[handle]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "jayz"
            }
          }
        }, {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1566"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple artists.",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Creates a new artist.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single artist.",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artists/{id}" : {
      "get" : {
        "description" : "Retrieves single artist by id.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, biography, owners, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single artist.",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates existing artist.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistUpdateBody"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single artist.",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artists/{id}/relationships/albums" : {
      "get" : {
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get albums relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/biography" : {
      "get" : {
        "description" : "Retrieves biography relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: biography",
          "example" : "biography",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "biography"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Single_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get biography relationship (\"to-one\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/profileArt" : {
      "get" : {
        "description" : "Retrieves profileArt relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: profileArt",
          "example" : "profileArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "profileArt"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get profileArt relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates profileArt relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistProfileArtRelationshipUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update profileArt relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artists/{id}/relationships/radio" : {
      "get" : {
        "description" : "Retrieves radio relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: radio",
          "example" : "radio",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "radio"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get radio relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/roles" : {
      "get" : {
        "description" : "Retrieves roles relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: roles",
          "example" : "roles",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "roles"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get roles relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/similarArtists" : {
      "get" : {
        "description" : "Retrieves similarArtists relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarArtists",
          "example" : "similarArtists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarArtists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get similarArtists relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/trackProviders" : {
      "get" : {
        "description" : "Retrieves trackProviders relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: trackProviders",
          "example" : "trackProviders",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "trackProviders"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_TrackProviders_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get trackProviders relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/tracks" : {
      "get" : {
        "description" : "Retrieves tracks relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Collapse by options for getting artist tracks. Available options: FINGERPRINT, ID. FINGERPRINT option might collapse similar tracks based entry fingerprints while collapsing by ID always returns all available items.",
          "example" : "FINGERPRINT",
          "in" : "query",
          "name" : "collapseBy",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: tracks",
          "example" : "tracks",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "tracks"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get tracks relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/videos" : {
      "get" : {
        "description" : "Retrieves videos relationship.",
        "parameters" : [ {
          "description" : "Artist id",
          "example" : "1566",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: videos",
          "example" : "videos",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "videos"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get videos relationship (\"to-many\").",
        "tags" : [ "artists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artworks" : {
      "get" : {
        "description" : "Retrieves multiple artworks by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Artwork id",
          "example" : "a468bee88def",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "a468bee88def"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple artworks.",
        "tags" : [ "artworks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Creates a new artwork.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single artwork.",
        "tags" : [ "artworks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artworks/{id}" : {
      "get" : {
        "description" : "Retrieves single artwork by id.",
        "parameters" : [ {
          "description" : "Artwork id",
          "example" : "a468bee88def",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single artwork.",
        "tags" : [ "artworks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artworks/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Artwork id",
          "example" : "a468bee88def",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "artworks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/genres" : {
      "get" : {
        "description" : "Retrieves multiple genres by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows filtering by genre id(s). USER_SELECTABLE is special value used to return specific genres which users can select from",
          "example" : "'1,2,3' or 'USER_SELECTABLE'",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "'1,2,3' or 'USER_SELECTABLE'"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Genres_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple genres.",
        "tags" : [ "genres" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/genres/{id}" : {
      "get" : {
        "description" : "Retrieves single genre by id.",
        "parameters" : [ {
          "description" : "Genre id",
          "example" : "123",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Genres_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single genre.",
        "tags" : [ "genres" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/lyrics" : {
      "post" : {
        "description" : "Creates a new lyric.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LyricsCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lyrics_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single lyric.",
        "tags" : [ "lyrics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/lyrics/{id}" : {
      "get" : {
        "description" : "Retrieves single lyric by id.",
        "parameters" : [ {
          "description" : "Lyrics Id",
          "example" : "nejMcAhh5N8S3EQ4LaqysVdI0cZZ",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners, track",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lyrics_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single lyric.",
        "tags" : [ "lyrics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "patch" : {
        "description" : "Updates existing lyric.",
        "parameters" : [ {
          "description" : "Lyrics Id",
          "example" : "nejMcAhh5N8S3EQ4LaqysVdI0cZZ",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LyricsUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single lyric.",
        "tags" : [ "lyrics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/lyrics/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Lyrics Id",
          "example" : "nejMcAhh5N8S3EQ4LaqysVdI0cZZ",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lyrics_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "lyrics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/lyrics/{id}/relationships/track" : {
      "get" : {
        "description" : "Retrieves track relationship.",
        "parameters" : [ {
          "description" : "Lyrics Id",
          "example" : "nejMcAhh5N8S3EQ4LaqysVdI0cZZ",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: track",
          "example" : "track",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "track"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lyrics_Single_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get track relationship (\"to-one\").",
        "tags" : [ "lyrics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/playlists" : {
      "get" : {
        "description" : "Retrieves multiple playlists by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners",
          "example" : "coverArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          }
        }, {
          "description" : "User id",
          "example" : "123456",
          "in" : "query",
          "name" : "filter[owners.id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "123456"
            }
          }
        }, {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "550e8400-e29b-41d4-a716-446655440000"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "summary" : "Get multiple playlists.",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Creates a new playlist.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Create single playlist.",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}" : {
      "delete" : {
        "description" : "Deletes existing playlist.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Delete single playlist.",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "get" : {
        "description" : "Retrieves single playlist by id.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners",
          "example" : "coverArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single playlist.",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates existing playlist.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Update single playlist.",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}/relationships/coverArt" : {
      "get" : {
        "description" : "Retrieves coverArt relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt",
          "example" : "coverArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get coverArt relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates coverArt relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistCoverArtRelationshipUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Update coverArt relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/playlists/{id}/relationships/items" : {
      "delete" : {
        "description" : "Deletes item(s) from items relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Delete from items relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "get" : {
        "description" : "Retrieves items relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: items",
          "example" : "items",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Items_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get items relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates items relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Update items relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Adds item(s) to items relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "summary" : "Add to items relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Playlist id",
          "example" : "550e8400-e29b-41d4-a716-446655440000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "playlists" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/providers" : {
      "get" : {
        "description" : "Retrieves multiple providers by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "example" : "771",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "771"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Providers_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple providers.",
        "tags" : [ "providers" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/providers/{id}" : {
      "get" : {
        "description" : "Retrieves single provider by id.",
        "parameters" : [ {
          "description" : "Provider id",
          "example" : "771",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Providers_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single provider.",
        "tags" : [ "providers" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}" : {
      "get" : {
        "description" : "Retrieves single searchResult by id.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists, topHits, tracks, videos",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get single searchResult.",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/albums" : {
      "get" : {
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get albums relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/artists" : {
      "get" : {
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get artists relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/playlists" : {
      "get" : {
        "description" : "Retrieves playlists relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: playlists",
          "example" : "playlists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "playlists"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get playlists relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/topHits" : {
      "get" : {
        "description" : "Retrieves topHits relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: topHits",
          "example" : "topHits",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "topHits"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get topHits relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/tracks" : {
      "get" : {
        "description" : "Retrieves tracks relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: tracks",
          "example" : "tracks",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "tracks"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get tracks relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/videos" : {
      "get" : {
        "description" : "Retrieves videos relationship.",
        "parameters" : [ {
          "description" : "Search query",
          "example" : "moon",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: videos",
          "example" : "videos",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "videos"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "summary" : "Get videos relationship (\"to-many\").",
        "tags" : [ "searchResults" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchSuggestions/{id}" : {
      "get" : {
        "description" : "Retrieves single searchSuggestion by id.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: directHits",
          "example" : "directHits",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "directHits"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchSuggestions_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single searchSuggestion.",
        "tags" : [ "searchSuggestions" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchSuggestions/{id}/relationships/directHits" : {
      "get" : {
        "description" : "Retrieves directHits relationship.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Explicit filter",
          "example" : "include, exclude",
          "in" : "query",
          "name" : "explicitFilter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: directHits",
          "example" : "directHits",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "directHits"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchSuggestions_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get directHits relationship (\"to-many\").",
        "tags" : [ "searchSuggestions" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/trackFiles/{id}" : {
      "get" : {
        "description" : "Retrieves single trackFile by id.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "formats",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "usage",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackFiles_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playback", "r_usr" ]
        } ],
        "summary" : "Get single trackFile.",
        "tags" : [ "trackFiles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackManifests/{id}" : {
      "get" : {
        "description" : "Retrieves single trackManifest by id.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "manifestType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "formats",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "uriScheme",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "usage",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "adaptive",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackManifests_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playback", "r_usr" ]
        } ],
        "summary" : "Get single trackManifest.",
        "tags" : [ "trackManifests" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackSourceFiles" : {
      "get" : {
        "description" : "Retrieves multiple trackSourceFiles by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Track source file id",
          "example" : "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackSourceFiles_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get multiple trackSourceFiles.",
        "tags" : [ "trackSourceFiles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "post" : {
        "description" : "Creates a new trackSourceFile.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrackSourceFileCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackSourceFiles_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single trackSourceFile.",
        "tags" : [ "trackSourceFiles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackSourceFiles/{id}" : {
      "get" : {
        "description" : "Retrieves single trackSourceFile by id.",
        "parameters" : [ {
          "description" : "Track source file id",
          "example" : "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackSourceFiles_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get single trackSourceFile.",
        "tags" : [ "trackSourceFiles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackSourceFiles/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "Track source file id",
          "example" : "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackSourceFiles_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "trackSourceFiles" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackStatistics" : {
      "get" : {
        "description" : "Retrieves multiple trackStatistics by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "75413016"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackStatistics_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get multiple trackStatistics.",
        "tags" : [ "trackStatistics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackStatistics/{id}" : {
      "get" : {
        "description" : "Retrieves single trackStatistic by id.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackStatistics_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get single trackStatistic.",
        "tags" : [ "trackStatistics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackStatistics/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackStatistics_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "trackStatistics" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks" : {
      "get" : {
        "description" : "Retrieves multiple tracks by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, genres, lyrics, owners, providers, radio, similarTracks, sourceFile, trackStatistics",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "User id",
          "example" : "123456",
          "in" : "query",
          "name" : "filter[owners.id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "123456"
            }
          }
        }, {
          "description" : "International Standard Recording Code (ISRC)",
          "example" : "QMJMT1701237",
          "in" : "query",
          "name" : "filter[isrc]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "QMJMT1701237"
            }
          }
        }, {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "75413016"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get multiple tracks.",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Creates a new track.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrackCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single track.",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks/{id}" : {
      "delete" : {
        "description" : "Deletes existing track.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Delete single track.",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      },
      "get" : {
        "description" : "Retrieves single track by id.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, genres, lyrics, owners, providers, radio, similarTracks, sourceFile, trackStatistics",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single track.",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "description" : "Updates existing track.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrackUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Update single track.",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks/{id}/relationships/albums" : {
      "get" : {
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get albums relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/artists" : {
      "get" : {
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get artists relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/genres" : {
      "get" : {
        "description" : "Retrieves genres relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: genres",
          "example" : "genres",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "genres"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get genres relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks/{id}/relationships/lyrics" : {
      "get" : {
        "description" : "Retrieves lyrics relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: lyrics",
          "example" : "lyrics",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "lyrics"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get lyrics relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/providers" : {
      "get" : {
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "example" : "providers",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get providers relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/radio" : {
      "get" : {
        "description" : "Retrieves radio relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: radio",
          "example" : "radio",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "radio"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get radio relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/similarTracks" : {
      "get" : {
        "description" : "Retrieves similarTracks relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarTracks",
          "example" : "similarTracks",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarTracks"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get similarTracks relationship (\"to-many\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/sourceFile" : {
      "get" : {
        "description" : "Retrieves sourceFile relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: sourceFile",
          "example" : "sourceFile",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "sourceFile"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Single_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get sourceFile relationship (\"to-one\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/trackStatistics" : {
      "get" : {
        "description" : "Retrieves trackStatistics relationship.",
        "parameters" : [ {
          "description" : "A Tidal catalogue ID",
          "example" : "75413016",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: trackStatistics",
          "example" : "trackStatistics",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "trackStatistics"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Single_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get trackStatistics relationship (\"to-one\").",
        "tags" : [ "tracks" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}" : {
      "get" : {
        "description" : "Retrieves single userCollection by id.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP 47 locale",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, owners, playlists",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "summary" : "Get single userCollection.",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/albums" : {
      "delete" : {
        "description" : "Deletes item(s) from albums relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Delete from albums relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "get" : {
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP 47 locale",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Albums_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "summary" : "Get albums relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Adds item(s) to albums relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Add to albums relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/artists" : {
      "delete" : {
        "description" : "Deletes item(s) from artists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Delete from artists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "get" : {
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP 47 locale",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Artists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "summary" : "Get artists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Adds item(s) to artists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Add to artists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/owners" : {
      "get" : {
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "example" : "owners",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "summary" : "Get owners relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/playlists" : {
      "delete" : {
        "description" : "Deletes item(s) from playlists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Delete from playlists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "get" : {
        "description" : "Retrieves playlists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: playlists",
          "example" : "playlists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "playlists"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Playlists_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "summary" : "Get playlists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "description" : "Adds item(s) to playlists relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "summary" : "Add to playlists relationship (\"to-many\").",
        "tags" : [ "userCollections" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userEntitlements/{id}" : {
      "get" : {
        "description" : "Retrieves single userEntitlement by id.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntitlements_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "entitlements.read" ]
        } ],
        "summary" : "Get single userEntitlement.",
        "tags" : [ "userEntitlements" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}" : {
      "get" : {
        "description" : "Retrieves single userRecommendation by id.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP47 locale code",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: discoveryMixes, myMixes, newArrivalMixes",
          "example" : "discoveryMixes",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "discoveryMixes"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "summary" : "Get single userRecommendation.",
        "tags" : [ "userRecommendations" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/discoveryMixes" : {
      "get" : {
        "description" : "Retrieves discoveryMixes relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP47 locale code",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: discoveryMixes",
          "example" : "discoveryMixes",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "discoveryMixes"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "summary" : "Get discoveryMixes relationship (\"to-many\").",
        "tags" : [ "userRecommendations" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/myMixes" : {
      "get" : {
        "description" : "Retrieves myMixes relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP47 locale code",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: myMixes",
          "example" : "myMixes",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "myMixes"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "summary" : "Get myMixes relationship (\"to-many\").",
        "tags" : [ "userRecommendations" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/newArrivalMixes" : {
      "get" : {
        "description" : "Retrieves newArrivalMixes relationship.",
        "parameters" : [ {
          "description" : "User id",
          "example" : "123456",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "BCP47 locale code",
          "example" : "en-US",
          "in" : "query",
          "name" : "locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: newArrivalMixes",
          "example" : "newArrivalMixes",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "newArrivalMixes"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "summary" : "Get newArrivalMixes relationship (\"to-many\").",
        "tags" : [ "userRecommendations" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userReports" : {
      "post" : {
        "description" : "Creates a new userReport.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserReportCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserReports_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "summary" : "Create single userReport.",
        "tags" : [ "userReports" ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/users/me" : {
      "get" : {
        "description" : "Retrieves current user's user(s).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "user.read" ]
        } ],
        "summary" : "Get current user's user(s).",
        "tags" : [ "users" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos" : {
      "get" : {
        "description" : "Retrieves multiple videos by available filters, or without if applicable.",
        "parameters" : [ {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "Allows to filter the collection of resources based on isrc attribute value",
          "example" : "USSM21600755",
          "in" : "query",
          "name" : "filter[isrc]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "USSM21600755"
            }
          }
        }, {
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "example" : "75623239",
          "in" : "query",
          "name" : "filter[id]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "75623239"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get multiple videos.",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}" : {
      "get" : {
        "description" : "Retrieves single video by id.",
        "parameters" : [ {
          "description" : "Video id",
          "example" : "75623239",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Single_Resource_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get single video.",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/albums" : {
      "get" : {
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "description" : "Video id",
          "example" : "75623239",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "example" : "albums",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get albums relationship (\"to-many\").",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/artists" : {
      "get" : {
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "description" : "Video id",
          "example" : "75623239",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "example" : "artists",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get artists relationship (\"to-many\").",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/providers" : {
      "get" : {
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "description" : "Video id",
          "example" : "75623239",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "example" : "providers",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get providers relationship (\"to-many\").",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/thumbnailArt" : {
      "get" : {
        "description" : "Retrieves thumbnailArt relationship.",
        "parameters" : [ {
          "description" : "Video id",
          "example" : "75623239",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "ISO 3166-1 alpha-2 country code",
          "example" : "US",
          "in" : "query",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Allows the client to customize which related resources should be returned. Available options: thumbnailArt",
          "example" : "thumbnailArt",
          "in" : "query",
          "name" : "include",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "thumbnailArt"
            }
          }
        }, {
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "in" : "query",
          "name" : "page[cursor]",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Relationship_Data_Document"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "$ref" : "#/components/responses/Bad_Request_Response"
          },
          "404" : {
            "$ref" : "#/components/responses/Not_Found_Response"
          },
          "405" : {
            "$ref" : "#/components/responses/Method_Not_Allowed_Response"
          },
          "406" : {
            "$ref" : "#/components/responses/Not_Acceptable_Response"
          },
          "415" : {
            "$ref" : "#/components/responses/Unsupported_Media_Type_Response"
          },
          "429" : {
            "$ref" : "#/components/responses/Too_Many_Requests_Response"
          },
          "500" : {
            "$ref" : "#/components/responses/Internal_Server_Error_Response"
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "summary" : "Get thumbnailArt relationship (\"to-many\").",
        "tags" : [ "videos" ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    }
  },
  "components" : {
    "responses" : {
      "Bad_Request_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"GENERIC_REQUEST_ERROR\",\"detail\":\"The request contains validation errors\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Bad request - The request could not be understood by the server due to malformed syntax or invalid parameters"
      },
      "Internal_Server_Error_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"INTERNAL_SERVER_ERROR\",\"detail\":\"The service encountered an error\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Internal server error - The server encountered an unexpected condition that prevented it from fulfilling the request"
      },
      "Method_Not_Allowed_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"METHOD_NOT_ALLOWED\",\"detail\":\"The resource doesnt support the requested HTTP method: POST\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Method not allowed - The request method is not allowed for the requested resource"
      },
      "Not_Acceptable_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"NOT_ACCEPTABLE\",\"detail\":\"Not acceptable response media type on client. Supported media types on server: application/vnd.api+json, application/json\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Not acceptable - The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request"
      },
      "Not_Found_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"NOT_FOUND\",\"detail\":\"The requested resource could not be found\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Not found - The requested resource could not be found"
      },
      "Too_Many_Requests_Response" : {
        "description" : "Too many requests - The user has sent too many requests in a given amount of time",
        "headers" : {
          "Retry-After" : {
            "description" : "Time to wait before making a new request, in seconds.",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "Unsupported_Media_Type_Response" : {
        "content" : {
          "application/vnd.api+json" : {
            "example" : "{\"errors\":[{\"code\":\"UNSUPPORTED_MEDIA_TYPE\",\"detail\":\"Unsupported request media type: application/xml. Expected media type format: application/vnd.api+json\"}]}",
            "schema" : {
              "$ref" : "#/components/schemas/Errors_Document"
            }
          }
        },
        "description" : "Unsupported media type - The request entity has a media type which the server or resource does not support"
      }
    },
    "schemas" : {
      "AlbumCoverArtRelationshipUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlbumCoverArtRelationshipUpdateOperation_Payload_Data"
            }
          }
        }
      },
      "AlbumCoverArtRelationshipUpdateOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          }
        }
      },
      "AlbumCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data"
          }
        }
      },
      "AlbumCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "relationships", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "copyright" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Attributes_Copyright"
          },
          "explicitLyrics" : {
            "type" : "boolean"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date"
          },
          "title" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string"
          },
          "upc" : {
            "maxLength" : 13,
            "minLength" : 12,
            "type" : "string"
          },
          "version" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Attributes_Copyright" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Relationships" : {
        "required" : [ "artists" ],
        "type" : "object",
        "properties" : {
          "artists" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Relationships_Artists"
          },
          "genres" : {
            "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Relationships_Genres"
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Relationships_Artists" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Relationships_Artists_Data"
            }
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Relationships_Artists_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Relationships_Genres" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 3,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlbumCreateOperation_Payload_Data_Relationships_Genres_Data"
            }
          }
        }
      },
      "AlbumCreateOperation_Payload_Data_Relationships_Genres_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "genres" ]
          }
        }
      },
      "AlbumUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data"
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data_Attributes" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "copyright" : {
            "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data_Attributes_Copyright"
          },
          "explicitLyrics" : {
            "type" : "boolean"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date"
          },
          "title" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string"
          },
          "version" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data_Attributes_Copyright" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 300,
            "minLength" : 1,
            "type" : "string"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data_Relationships" : {
        "type" : "object",
        "properties" : {
          "genres" : {
            "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data_Relationships_Genres"
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data_Relationships_Genres" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 3,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlbumUpdateOperation_Payload_Data_Relationships_Genres_Data"
            }
          }
        }
      },
      "AlbumUpdateOperation_Payload_Data_Relationships_Genres_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "genres" ]
          }
        }
      },
      "Albums_Attributes" : {
        "required" : [ "barcodeId", "duration", "explicit", "mediaTags", "numberOfItems", "numberOfVolumes", "popularity", "title", "type" ],
        "type" : "object",
        "properties" : {
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this album",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "barcodeId" : {
            "type" : "string",
            "description" : "Barcode id (EAN-13 or UPC-A)",
            "example" : "00854242007552"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT46M17S"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : true
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Album links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "HIRES_LOSSLESS, LOSSLESS"
            }
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of items in album",
            "format" : "int32",
            "example" : 13
          },
          "numberOfVolumes" : {
            "type" : "integer",
            "description" : "Number of volumes",
            "format" : "int32",
            "example" : 1
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-30"
          },
          "title" : {
            "type" : "string",
            "description" : "Album title",
            "example" : "4:44"
          },
          "type" : {
            "type" : "string",
            "description" : "Album type",
            "enum" : [ "ALBUM", "EP", "SINGLE" ]
          }
        }
      },
      "Albums_Items_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Albums_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Albums_Items_Resource_Identifier_Meta" : {
        "required" : [ "trackNumber", "volumeNumber" ],
        "type" : "object",
        "properties" : {
          "trackNumber" : {
            "type" : "integer",
            "description" : "track number",
            "format" : "int32",
            "example" : 4
          },
          "volumeNumber" : {
            "type" : "integer",
            "description" : "volume number",
            "format" : "int32",
            "example" : 1
          }
        }
      },
      "Albums_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Albums_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Albums_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Albums_Relationships" : {
        "required" : [ "artists", "coverArt", "genres", "items", "owners", "providers", "similarAlbums" ],
        "properties" : {
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "coverArt" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "genres" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "items" : {
            "$ref" : "#/components/schemas/Albums_Items_Multi_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "similarAlbums" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "Albums_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Albums_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Albums_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Albums_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Albums_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistBiographies_Attributes" : {
        "required" : [ "editable", "text" ],
        "type" : "object",
        "properties" : {
          "editable" : {
            "type" : "boolean",
            "description" : "Boolean to indicate if the biography is editable (source = tidal or artist)",
            "example" : true
          },
          "text" : {
            "type" : "string",
            "description" : "Artist biography",
            "example" : "Once upon a time an artist is born"
          }
        }
      },
      "ArtistBiographies_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistBiographies_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistBiographies_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistBiographies_Relationships" : {
        "required" : [ "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "ArtistBiographies_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistBiographies_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/ArtistBiographies_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "ArtistBiographies_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistBiographies_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistBiographyUpdateBody" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistBiographyUpdateBody_Data"
          }
        }
      },
      "ArtistBiographyUpdateBody_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistBiographyUpdateBody_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artistBiographies" ]
          }
        }
      },
      "ArtistBiographyUpdateBody_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string"
          }
        }
      },
      "ArtistClaimAcceptedArtistsRelationshipUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistClaimAcceptedArtistsRelationshipUpdateOperation_Payload_Data"
            }
          }
        }
      },
      "ArtistClaimAcceptedArtistsRelationshipUpdateOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "ArtistClaimId" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "description" : "Artist claim id",
        "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479"
      },
      "ArtistClaimsCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistClaimsCreateOperation_Payload_Data"
          }
        }
      },
      "ArtistClaimsCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistClaimsCreateOperation_Payload_Data_Attributes"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artistClaims" ]
          }
        }
      },
      "ArtistClaimsCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "provider" ],
        "type" : "object",
        "properties" : {
          "provider" : {
            "type" : "string",
            "enum" : [ "DISTROKID", "CDBABY", "TUNECORE" ]
          }
        }
      },
      "ArtistClaimsUpdateOperation_Payload" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistClaimsUpdateOperation_Payload_Data"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ArtistClaimsUpdateOperation_Payload_Meta"
          }
        }
      },
      "ArtistClaimsUpdateOperation_Payload_Data" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistClaimsUpdateOperation_Payload_Data_Attributes"
          },
          "id" : {
            "$ref" : "#/components/schemas/ArtistClaimId"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artistClaims" ]
          }
        }
      },
      "ArtistClaimsUpdateOperation_Payload_Data_Attributes" : {
        "type" : "object"
      },
      "ArtistClaimsUpdateOperation_Payload_Meta" : {
        "required" : [ "authorizationCode" ],
        "type" : "object",
        "properties" : {
          "authorizationCode" : {
            "type" : "string"
          }
        }
      },
      "ArtistClaims_Attributes" : {
        "required" : [ "provider" ],
        "type" : "object",
        "properties" : {
          "provider" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The DSP used for authentication",
            "enum" : [ "DISTROKID", "CDBABY", "TUNECORE" ]
          },
          "recommendation" : {
            "type" : "string",
            "description" : "The recommended claim resolution",
            "enum" : [ "DSP_PROFILE_CLAIMED", "CONTENT_MIGRATED_TO_UPLOADS", "NO_CONTENT_MATCHED" ]
          },
          "redirectUrl" : {
            "type" : "string",
            "description" : "The DSP redirect url used for authentication"
          },
          "retrievedUpcs" : {
            "type" : "array",
            "description" : "List of UPCs retrieved from the DSP",
            "items" : {
              "$ref" : "#/components/schemas/BarcodeId"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of this claim",
            "enum" : [ "AWAITING_OAUTH", "FETCHING_CONTENT", "VERIFIED", "NO_MATCHES", "AUTHENTICATION_FAILED", "PROCESSING", "COMPLETED", "FAILED", "CANCELLED" ]
          }
        }
      },
      "ArtistClaims_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistClaims_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistClaims_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistClaims_Relationships" : {
        "required" : [ "acceptedArtists", "owners", "recommendedArtists" ],
        "properties" : {
          "acceptedArtists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "recommendedArtists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "ArtistClaims_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistClaims_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/ArtistClaims_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "ArtistClaims_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistClaims_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistCreateOperation_Meta" : {
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "type" : "boolean"
          }
        }
      },
      "ArtistCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistCreateOperation_Payload_Data"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ArtistCreateOperation_Meta"
          }
        }
      },
      "ArtistCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistCreateOperation_Payload_Data_Attributes"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "ArtistCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "handle" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ArtistProfileArtRelationshipUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistProfileArtRelationshipUpdateOperation_Payload_Data"
            }
          }
        }
      },
      "ArtistProfileArtRelationshipUpdateOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          }
        }
      },
      "ArtistRoles_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ArtistRoles_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistRoles_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistRoles_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistRoles_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "ArtistRoles_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistRoles_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistUpdateBody" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Data"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Meta"
          }
        }
      },
      "ArtistUpdateBody_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "ArtistUpdateBody_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "contributionsEnabled" : {
            "type" : "boolean"
          },
          "contributionsSalesPitch" : {
            "type" : "string"
          },
          "externalLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/External_Link_Payload"
            }
          },
          "handle" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ArtistUpdateBody_Meta" : {
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "type" : "boolean"
          }
        }
      },
      "Artists_Attributes" : {
        "required" : [ "name", "popularity" ],
        "type" : "object",
        "properties" : {
          "contributionsEnabled" : {
            "type" : "boolean",
            "description" : "Is the artist enabled for contributions?",
            "example" : true
          },
          "contributionsSalesPitch" : {
            "type" : "string",
            "description" : "Contributions sales pitch",
            "example" : "Help me be a full time artist"
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Artist links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "handle" : {
            "type" : "string",
            "description" : "Artist handle",
            "example" : "jayz"
          },
          "name" : {
            "type" : "string",
            "description" : "Artist name",
            "example" : "JAY Z"
          },
          "popularity" : {
            "type" : "number",
            "description" : "Artist popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "spotlighted" : {
            "type" : "boolean",
            "description" : "Is the artist spotlighted?",
            "example" : true
          }
        }
      },
      "Artists_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artists_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_Relationships" : {
        "required" : [ "albums", "biography", "owners", "profileArt", "radio", "roles", "similarArtists", "trackProviders", "tracks", "videos" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "biography" : {
            "$ref" : "#/components/schemas/Single_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "profileArt" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "roles" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "similarArtists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "trackProviders" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Multi_Relationship_Data_Document"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "Artists_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Artists_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Artists_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Artists_Single_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Artists_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_TrackProviders_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_TrackProviders_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Artists_TrackProviders_Resource_Identifier_Meta" : {
        "required" : [ "numberOfTracks" ],
        "type" : "object",
        "properties" : {
          "numberOfTracks" : {
            "type" : "integer",
            "description" : "Total number of tracks released together with the provider",
            "format" : "int64",
            "example" : 14
          }
        }
      },
      "ArtworkCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data"
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data_Attributes"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "mediaType", "sourceFile" ],
        "type" : "object",
        "properties" : {
          "mediaType" : {
            "type" : "string",
            "enum" : [ "IMAGE", "VIDEO" ]
          },
          "sourceFile" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data_Attributes_SourceFile"
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data_Attributes_SourceFile" : {
        "required" : [ "md5Hash", "size" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Artwork_File" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Artwork file href"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Artwork_File_Meta"
          }
        },
        "description" : "Artwork files"
      },
      "Artwork_File_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "description" : "Height (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "width" : {
            "type" : "integer",
            "description" : "Width (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "Metadata about an artwork file"
      },
      "Artwork_SourceFile" : {
        "required" : [ "md5Hash", "size", "status", "uploadLink" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string",
            "description" : "MD5 hash of file to be uploaded"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size of the artwork in bytes",
            "format" : "int64"
          },
          "status" : {
            "$ref" : "#/components/schemas/File_Status"
          },
          "uploadLink" : {
            "$ref" : "#/components/schemas/File_Upload_Link"
          }
        },
        "description" : "Artwork source file"
      },
      "Artworks_Attributes" : {
        "required" : [ "files", "mediaType" ],
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "array",
            "description" : "Artwork files",
            "items" : {
              "$ref" : "#/components/schemas/Artwork_File"
            }
          },
          "mediaType" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Media type of artwork files",
            "enum" : [ "IMAGE", "VIDEO" ]
          },
          "sourceFile" : {
            "$ref" : "#/components/schemas/Artwork_SourceFile"
          }
        }
      },
      "Artworks_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artworks_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artworks_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artworks_Relationships" : {
        "required" : [ "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "Artworks_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Artworks_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Artworks_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Artworks_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Artworks_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "AttachSourceFileToTrack" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks" ]
          }
        }
      },
      "AudioNormalizationData" : {
        "type" : "object",
        "properties" : {
          "peakAmplitude" : {
            "type" : "number",
            "format" : "float"
          },
          "replayGain" : {
            "type" : "number",
            "format" : "float"
          }
        },
        "description" : "Track normalization data"
      },
      "BarcodeId" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "Barcode Id",
        "example" : 196589525444
      },
      "DrmData" : {
        "type" : "object",
        "properties" : {
          "certificateUrl" : {
            "type" : "string"
          },
          "drmSystem" : {
            "type" : "string",
            "enum" : [ "FAIRPLAY", "WIDEVINE" ]
          },
          "licenseUrl" : {
            "type" : "string"
          }
        },
        "description" : "DRM data. Absence implies no DRM."
      },
      "Error_Object" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "application-specific error code"
          },
          "detail" : {
            "type" : "string",
            "description" : "human-readable explanation specific to this occurrence of the problem"
          },
          "id" : {
            "type" : "string",
            "description" : "unique identifier for this particular occurrence of the problem"
          },
          "source" : {
            "$ref" : "#/components/schemas/Error_Object_Source"
          },
          "status" : {
            "type" : "string",
            "description" : "HTTP status code applicable to this problem"
          }
        }
      },
      "Error_Object_Source" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "type" : "string",
            "description" : "string indicating the name of a single request header which caused the error",
            "example" : "X-some-custom-header"
          },
          "parameter" : {
            "type" : "string",
            "description" : "string indicating which URI query parameter caused the error.",
            "example" : "countryCode"
          },
          "pointer" : {
            "type" : "string",
            "description" : "a JSON Pointer [RFC6901] to the value in the request document that caused the error",
            "example" : "/data/attributes/title"
          }
        }
      },
      "Errors_Document" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "Array of error objects",
            "items" : {
              "$ref" : "#/components/schemas/Error_Object"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "External_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/External_Link_Meta"
          }
        }
      },
      "External_Link_Meta" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "TIDAL_SHARING", "TIDAL_AUTOPLAY_ANDROID", "TIDAL_AUTOPLAY_IOS", "TIDAL_AUTOPLAY_WEB", "TWITTER", "FACEBOOK", "INSTAGRAM", "TIKTOK", "SNAPCHAT", "OFFICIAL_HOMEPAGE", "CASHAPP_CONTRIBUTIONS" ]
          }
        },
        "description" : "metadata about an external link"
      },
      "External_Link_Payload" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/External_Link_Meta"
          }
        }
      },
      "File_Status" : {
        "required" : [ "moderationFileStatus", "technicalFileStatus" ],
        "type" : "object",
        "properties" : {
          "moderationFileStatus" : {
            "type" : "string",
            "description" : "Moderation status for file",
            "enum" : [ "NOT_MODERATED", "SCANNING", "FLAGGED", "TAKEN_DOWN", "OK", "ERROR" ]
          },
          "technicalFileStatus" : {
            "type" : "string",
            "description" : "Technical status for file",
            "enum" : [ "UPLOAD_REQUESTED", "PROCESSING", "OK", "ERROR" ]
          }
        },
        "description" : "File status"
      },
      "File_Upload_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Href to upload actual file to"
          },
          "meta" : {
            "$ref" : "#/components/schemas/File_Upload_Link_Meta"
          }
        },
        "description" : "Upload link"
      },
      "File_Upload_Link_Meta" : {
        "required" : [ "method" ],
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "HTTP headers that must be added to the operation"
            },
            "description" : "HTTP headers that must be added to the operation"
          },
          "method" : {
            "type" : "string",
            "description" : "HTTP method"
          }
        },
        "description" : "metadata for upload link"
      },
      "Genres_Attributes" : {
        "required" : [ "genreName" ],
        "type" : "object",
        "properties" : {
          "genreName" : {
            "type" : "string",
            "description" : "Genre name",
            "example" : "pop"
          }
        }
      },
      "Genres_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Genres_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Genres_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Genres_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Genres_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Genres_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Included" : {
        "type" : "array",
        "items" : {
          "discriminator" : {
            "mapping" : {
              "albums" : "#/components/schemas/Albums_Resource_Object",
              "artistBiographies" : "#/components/schemas/ArtistBiographies_Resource_Object",
              "artistClaims" : "#/components/schemas/ArtistClaims_Resource_Object",
              "artistRoles" : "#/components/schemas/ArtistRoles_Resource_Object",
              "artists" : "#/components/schemas/Artists_Resource_Object",
              "artworks" : "#/components/schemas/Artworks_Resource_Object",
              "genres" : "#/components/schemas/Genres_Resource_Object",
              "lyrics" : "#/components/schemas/Lyrics_Resource_Object",
              "playlists" : "#/components/schemas/Playlists_Resource_Object",
              "providers" : "#/components/schemas/Providers_Resource_Object",
              "searchResults" : "#/components/schemas/SearchResults_Resource_Object",
              "searchSuggestions" : "#/components/schemas/SearchSuggestions_Resource_Object",
              "trackFiles" : "#/components/schemas/TrackFiles_Resource_Object",
              "trackManifests" : "#/components/schemas/TrackManifests_Resource_Object",
              "trackSourceFiles" : "#/components/schemas/TrackSourceFiles_Resource_Object",
              "trackStatistics" : "#/components/schemas/TrackStatistics_Resource_Object",
              "tracks" : "#/components/schemas/Tracks_Resource_Object",
              "userCollections" : "#/components/schemas/UserCollections_Resource_Object",
              "userEntitlements" : "#/components/schemas/UserEntitlements_Resource_Object",
              "userRecommendations" : "#/components/schemas/UserRecommendations_Resource_Object",
              "userReports" : "#/components/schemas/UserReports_Resource_Object",
              "users" : "#/components/schemas/Users_Resource_Object",
              "videos" : "#/components/schemas/Videos_Resource_Object"
            },
            "propertyName" : "type"
          },
          "oneOf" : [ {
            "$ref" : "#/components/schemas/Albums_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/ArtistBiographies_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/ArtistClaims_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/ArtistRoles_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Artists_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Artworks_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Genres_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Lyrics_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Playlists_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Providers_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/SearchResults_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/SearchSuggestions_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/TrackFiles_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/TrackManifests_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/TrackSourceFiles_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/TrackStatistics_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Tracks_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/UserCollections_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/UserEntitlements_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/UserRecommendations_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/UserReports_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Users_Resource_Object"
          }, {
            "$ref" : "#/components/schemas/Videos_Resource_Object"
          } ]
        }
      },
      "Links" : {
        "required" : [ "self" ],
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/Links_Meta"
          },
          "next" : {
            "type" : "string",
            "description" : "Link to next page",
            "example" : "/artists/xyz/relationships/tracks?page[cursor]=zyx"
          },
          "self" : {
            "type" : "string",
            "description" : "Link to self",
            "example" : "/artists/xyz/relationships/tracks"
          }
        }
      },
      "Links_Meta" : {
        "required" : [ "nextCursor" ],
        "type" : "object",
        "properties" : {
          "nextCursor" : {
            "type" : "string",
            "description" : "Only cursor part of next link",
            "example" : "zyx"
          }
        },
        "description" : "Non-standard meta information for links"
      },
      "LyricsCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LyricsCreateOperation_Payload_Data"
          },
          "meta" : {
            "$ref" : "#/components/schemas/LyricsCreateOperation_Payload_Meta"
          }
        }
      },
      "LyricsCreateOperation_Payload_Data" : {
        "required" : [ "relationships", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/LyricsCreateOperation_Payload_Data_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/LyricsCreateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "lyrics" ]
          }
        }
      },
      "LyricsCreateOperation_Payload_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 10000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "LyricsCreateOperation_Payload_Data_Relationships" : {
        "required" : [ "track" ],
        "type" : "object",
        "properties" : {
          "track" : {
            "$ref" : "#/components/schemas/LyricsCreateOperation_Payload_Data_Relationships_Track"
          }
        }
      },
      "LyricsCreateOperation_Payload_Data_Relationships_Track" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks" ]
          }
        }
      },
      "LyricsCreateOperation_Payload_Meta" : {
        "type" : "object",
        "properties" : {
          "generate" : {
            "type" : "boolean"
          }
        }
      },
      "LyricsUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LyricsUpdateOperation_Payload_Data"
          }
        }
      },
      "LyricsUpdateOperation_Payload_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/LyricsUpdateOperation_Payload_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "lyrics" ]
          }
        }
      },
      "LyricsUpdateOperation_Payload_Data_Attributes" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 10000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "Lyrics_Attributes" : {
        "required" : [ "technicalStatus" ],
        "type" : "object",
        "properties" : {
          "technicalStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "ERROR", "OK" ]
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "Lyrics_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Lyrics_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lyrics_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Lyrics_Relationships" : {
        "required" : [ "owners", "track" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "track" : {
            "$ref" : "#/components/schemas/Single_Relationship_Data_Document"
          }
        }
      },
      "Lyrics_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Lyrics_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Lyrics_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Lyrics_Single_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Lyrics_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Lyrics_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PlaylistCoverArtRelationshipUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistCoverArtRelationshipUpdateOperation_Payload_Data"
            }
          }
        }
      },
      "PlaylistCoverArtRelationshipUpdateOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          }
        }
      },
      "PlaylistCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload_Data"
          }
        }
      },
      "PlaylistCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload_Data_Attributes"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          }
        }
      },
      "PlaylistCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PUBLIC",
            "enum" : [ "PUBLIC", "UNLISTED" ]
          },
          "description" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload_Data"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload_Meta" : {
        "required" : [ "positionBefore" ],
        "type" : "object",
        "properties" : {
          "positionBefore" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Data"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Meta" : {
        "required" : [ "positionBefore" ],
        "type" : "object",
        "properties" : {
          "positionBefore" : {
            "type" : "string"
          }
        }
      },
      "PlaylistUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload_Data"
          }
        }
      },
      "PlaylistUpdateOperation_Payload_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          }
        }
      },
      "PlaylistUpdateOperation_Payload_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PUBLIC",
            "enum" : [ "PUBLIC", "UNLISTED" ]
          },
          "description" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Playlists_Attributes" : {
        "required" : [ "accessType", "bounded", "createdAt", "externalLinks", "lastModifiedAt", "name", "playlistType" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PUBLIC",
            "enum" : [ "PUBLIC", "UNLISTED" ]
          },
          "bounded" : {
            "type" : "boolean",
            "description" : "Indicates if the playlist has a duration and set number of tracks"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Datetime of playlist creation (ISO 8601)",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "Playlist description"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration of playlist (ISO 8601)",
            "example" : "P30M5S"
          },
          "externalLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "lastModifiedAt" : {
            "type" : "string",
            "description" : "Datetime of last modification of the playlist (ISO 8601)",
            "format" : "date-time"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Playlist name"
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of items in the playlist",
            "format" : "int32"
          },
          "playlistType" : {
            "type" : "string",
            "description" : "The type of the playlist",
            "enum" : [ "EDITORIAL", "USER", "MIX", "ARTIST" ]
          }
        }
      },
      "Playlists_Items_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Playlists_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Playlists_Items_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "Playlists_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Playlists_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Playlists_Relationships" : {
        "required" : [ "coverArt", "items", "owners" ],
        "properties" : {
          "coverArt" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "items" : {
            "$ref" : "#/components/schemas/Playlists_Items_Multi_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "Playlists_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Playlists_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Playlists_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Playlists_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Playlists_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Providers_Attributes" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Provider name",
            "example" : "Columbia/Legacy"
          }
        }
      },
      "Providers_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Providers_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Providers_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Providers_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Providers_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Providers_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Resource_ObjectObjectObject" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "type" : "object"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "SearchResults_Attributes" : {
        "required" : [ "trackingId" ],
        "type" : "object",
        "properties" : {
          "didYouMean" : {
            "type" : "string",
            "description" : "'did you mean' prompt",
            "example" : "beatles"
          },
          "trackingId" : {
            "type" : "string",
            "description" : "search request unique tracking number",
            "example" : "5896e37d-e847-4ca6-9629-ef8001719f7f"
          }
        }
      },
      "SearchResults_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchResults_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchResults_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchResults_Relationships" : {
        "required" : [ "albums", "artists", "playlists", "topHits", "tracks", "videos" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "topHits" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "SearchResults_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/SearchResults_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/SearchResults_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "SearchResults_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SearchResults_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchSuggestions_Attributes" : {
        "required" : [ "trackingId" ],
        "type" : "object",
        "properties" : {
          "history" : {
            "type" : "array",
            "description" : "Suggestions from search history",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_History"
            }
          },
          "suggestions" : {
            "type" : "array",
            "description" : "Suggested search queries",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Suggestions"
            }
          },
          "trackingId" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Unique tracking id"
          }
        }
      },
      "SearchSuggestions_Highlights" : {
        "required" : [ "length", "start" ],
        "type" : "object",
        "properties" : {
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "start" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SearchSuggestions_History" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "highlights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Highlights"
            }
          },
          "query" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "Suggestions from search history"
      },
      "SearchSuggestions_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchSuggestions_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchSuggestions_Relationships" : {
        "required" : [ "directHits" ],
        "properties" : {
          "directHits" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "SearchSuggestions_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "SearchSuggestions_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "SearchSuggestions_Suggestions" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "highlights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Highlights"
            }
          },
          "query" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "Suggested search queries"
      },
      "Single_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data"
          }
        }
      },
      "TrackCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "relationships", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks" ]
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "accessType", "title" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PRIVATE",
            "enum" : [ "PUBLIC", "UNLISTED", "PRIVATE" ]
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships" : {
        "required" : [ "albums", "artists" ],
        "type" : "object",
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Albums"
          },
          "artists" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Artists"
          },
          "genres" : {
            "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Genres"
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Albums" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Albums_Data"
            }
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Albums_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Artists" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Artists_Data"
            }
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Artists_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Genres" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 3,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackCreateOperation_Payload_Data_Relationships_Genres_Data"
            }
          }
        }
      },
      "TrackCreateOperation_Payload_Data_Relationships_Genres_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "genres" ]
          }
        }
      },
      "TrackFiles_Attributes" : {
        "type" : "object",
        "properties" : {
          "albumAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "format" : {
            "type" : "string",
            "description" : "File's audio format",
            "enum" : [ "HEAACV1", "AACLC", "FLAC", "FLAC_HIRES" ]
          },
          "trackAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "trackPresentation" : {
            "type" : "string",
            "description" : "Track presentation",
            "enum" : [ "FULL", "PREVIEW" ]
          },
          "url" : {
            "type" : "string",
            "description" : "File URL"
          }
        }
      },
      "TrackFiles_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackFiles_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackFiles_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackFiles_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "TrackFiles_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackFiles_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackManifests_Attributes" : {
        "type" : "object",
        "properties" : {
          "albumAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "drmData" : {
            "$ref" : "#/components/schemas/DrmData"
          },
          "formats" : {
            "type" : "array",
            "description" : "Formats present in manifest",
            "items" : {
              "type" : "string",
              "description" : "Formats present in manifest",
              "enum" : [ "HEAACV1", "AACLC", "FLAC", "FLAC_HIRES" ]
            }
          },
          "hash" : {
            "type" : "string",
            "description" : "Unique manifest hash"
          },
          "trackAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "trackPresentation" : {
            "type" : "string",
            "description" : "Track presentation",
            "enum" : [ "FULL", "PREVIEW" ]
          },
          "uri" : {
            "type" : "string",
            "description" : "Manifest URI"
          }
        }
      },
      "TrackManifests_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackManifests_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackManifests_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackManifests_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "TrackManifests_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackManifests_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackSourceFileCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackSourceFileCreateOperation_Payload_Data"
          }
        }
      },
      "TrackSourceFileCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "relationships", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackSourceFileCreateOperation_Payload_Data_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/TrackSourceFileCreateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "trackSourceFiles" ]
          }
        }
      },
      "TrackSourceFileCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "md5Hash", "size" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TrackSourceFileCreateOperation_Payload_Data_Relationships" : {
        "required" : [ "track" ],
        "type" : "object",
        "properties" : {
          "track" : {
            "$ref" : "#/components/schemas/AttachSourceFileToTrack"
          }
        }
      },
      "TrackSourceFiles_Attributes" : {
        "required" : [ "md5Hash", "size", "status", "uploadLink" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string",
            "description" : "MD5 hash of file to be uploaded"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size of the track in bytes",
            "format" : "int64"
          },
          "status" : {
            "$ref" : "#/components/schemas/File_Status"
          },
          "uploadLink" : {
            "$ref" : "#/components/schemas/File_Upload_Link"
          }
        }
      },
      "TrackSourceFiles_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackSourceFiles_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackSourceFiles_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackSourceFiles_Relationships" : {
        "required" : [ "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "TrackSourceFiles_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackSourceFiles_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/TrackSourceFiles_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "TrackSourceFiles_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackSourceFiles_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackStatistics_Attributes" : {
        "required" : [ "totalPlaybacks", "uniqueListeners" ],
        "type" : "object",
        "properties" : {
          "totalPlaybacks" : {
            "type" : "integer",
            "description" : "Total playbacks",
            "format" : "int32"
          },
          "uniqueListeners" : {
            "type" : "integer",
            "description" : "Unique listeners",
            "format" : "int32"
          }
        }
      },
      "TrackStatistics_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackStatistics_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackStatistics_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackStatistics_Relationships" : {
        "required" : [ "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "TrackStatistics_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackStatistics_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/TrackStatistics_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "TrackStatistics_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackStatistics_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackUpdateOperation_Payload_Data"
          }
        }
      },
      "TrackUpdateOperation_Payload_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/TrackUpdateOperation_Payload_Data_Attributes"
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/TrackUpdateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks" ]
          }
        }
      },
      "TrackUpdateOperation_Payload_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PRIVATE",
            "enum" : [ "PUBLIC", "UNLISTED", "PRIVATE" ]
          },
          "bpm" : {
            "type" : "number",
            "format" : "float"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "key" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "C", "CSharp", "D", "Eb", "E", "F", "FSharp", "G", "Ab", "A", "Bb", "B" ]
          },
          "keyScale" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "MAJOR", "MINOR", "AEOLIAN", "BLUES", "DORIAN", "HARMONIC_MINOR", "LOCRIAN", "LYDIAN", "MIXOLYDIAN", "PENTATONIC_MAJOR", "PHRYGIAN", "MELODIC_MINOR", "PENTATONIC_MINOR" ]
          },
          "title" : {
            "type" : "string"
          },
          "toneTags" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string",
              "description" : "Tone tags",
              "example" : "happy"
            }
          }
        }
      },
      "TrackUpdateOperation_Payload_Data_Relationships" : {
        "type" : "object",
        "properties" : {
          "genres" : {
            "$ref" : "#/components/schemas/TrackUpdateOperation_Payload_Data_Relationships_Genres"
          }
        }
      },
      "TrackUpdateOperation_Payload_Data_Relationships_Genres" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 3,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackUpdateOperation_Payload_Data_Relationships_Genres_Data"
            }
          }
        }
      },
      "TrackUpdateOperation_Payload_Data_Relationships_Genres_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "genres" ]
          }
        }
      },
      "Tracks_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "key", "keyScale", "mediaTags", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Access type",
            "example" : "PRIVATE",
            "enum" : [ "PUBLIC", "UNLISTED", "PRIVATE" ]
          },
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this track",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "bpm" : {
            "type" : "number",
            "description" : "Beats per minute",
            "format" : "float",
            "example" : 60.0
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Datetime of track creation (ISO 8601)",
            "format" : "date-time"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT2M58S"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Track links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "isrc" : {
            "type" : "string",
            "description" : "International Standard Recording Code (ISRC)",
            "example" : "QMJMT1701229"
          },
          "key" : {
            "type" : "string",
            "description" : "Key",
            "enum" : [ "UNKNOWN", "C", "CSharp", "D", "Eb", "E", "F", "FSharp", "G", "Ab", "A", "Bb", "B" ]
          },
          "keyScale" : {
            "type" : "string",
            "description" : "The scale of the key",
            "enum" : [ "UNKNOWN", "MAJOR", "MINOR", "AEOLIAN", "BLUES", "DORIAN", "HARMONIC_MINOR", "LOCRIAN", "LYDIAN", "MIXOLYDIAN", "PENTATONIC_MAJOR", "PHRYGIAN", "MELODIC_MINOR", "PENTATONIC_MINOR" ]
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "HIRES_LOSSLESS"
            }
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "spotlighted" : {
            "type" : "boolean",
            "description" : "Is the track spotlighted?",
            "example" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Track title",
            "example" : "Kill Jay Z"
          },
          "toneTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Tone tags",
              "example" : "Happy"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "Track version, complements title",
            "example" : "original, mix etc"
          }
        }
      },
      "Tracks_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Tracks_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tracks_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Tracks_Relationships" : {
        "required" : [ "albums", "artists", "genres", "lyrics", "owners", "providers", "radio", "similarTracks", "sourceFile", "trackStatistics" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "genres" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "lyrics" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "similarTracks" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "sourceFile" : {
            "$ref" : "#/components/schemas/Single_Relationship_Data_Document"
          },
          "trackStatistics" : {
            "$ref" : "#/components/schemas/Single_Relationship_Data_Document"
          }
        }
      },
      "Tracks_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Tracks_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Tracks_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Tracks_Single_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Tracks_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tracks_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollectionAlbumsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipAddOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionAlbumsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollectionArtistsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipAddOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionArtistsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollections_Albums_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Albums_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Albums_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Albums_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserCollections_Albums_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollections_Artists_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Artists_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Artists_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Artists_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserCollections_Artists_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollections_Attributes" : {
        "type" : "object"
      },
      "UserCollections_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Playlists_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Playlists_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Playlists_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Playlists_Resource_Identifier_Meta"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserCollections_Playlists_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollections_Relationships" : {
        "required" : [ "albums", "artists", "owners", "playlists" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/UserCollections_Albums_Multi_Relationship_Data_Document"
          },
          "artists" : {
            "$ref" : "#/components/schemas/UserCollections_Artists_Multi_Relationship_Data_Document"
          },
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/UserCollections_Playlists_Multi_Relationship_Data_Document"
          }
        }
      },
      "UserCollections_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserCollections_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserCollections_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserCollections_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserCollections_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserEntitlements_Attributes" : {
        "required" : [ "entitlements" ],
        "type" : "object",
        "properties" : {
          "entitlements" : {
            "type" : "array",
            "description" : "entitlements for user",
            "items" : {
              "type" : "string",
              "description" : "entitlements for user",
              "enum" : [ "MUSIC", "DJ" ]
            }
          }
        }
      },
      "UserEntitlements_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserEntitlements_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserEntitlements_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserEntitlements_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserEntitlements_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserEntitlements_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserRecommendations_Attributes" : {
        "type" : "object"
      },
      "UserRecommendations_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserRecommendations_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserRecommendations_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserRecommendations_Relationships" : {
        "required" : [ "discoveryMixes", "myMixes", "newArrivalMixes" ],
        "properties" : {
          "discoveryMixes" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "myMixes" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "newArrivalMixes" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "UserRecommendations_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserRecommendations_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserRecommendations_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserRecommendations_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserRecommendations_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserReportCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserReportCreateOperation_Payload_Data"
          }
        }
      },
      "UserReportCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "relationships", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserReportCreateOperation_Payload_Data_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserReportsCreateOperation_Payload_Data_Relationships"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "userReports" ]
          }
        }
      },
      "UserReportCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "description", "reason" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string",
            "enum" : [ "SEXUAL_CONTENT_OR_NUDITY", "VIOLENT_OR_DANGEROUS_CONTENT", "HATEFUL_OR_ABUSIVE_CONTENT", "HARASSMENT", "PRIVACY_VIOLATION", "SCAMS_OR_FRAUD", "SPAM", "COPYRIGHT_INFRINGEMENT", "UNKNOWN" ]
          }
        }
      },
      "UserReportsCreateOperation_Payload_Data_Relationships" : {
        "required" : [ "reportedResources" ],
        "type" : "object",
        "properties" : {
          "reportedResources" : {
            "$ref" : "#/components/schemas/UserReportsCreateOperation_Payload_Data_Relationships_ReportedResources"
          }
        }
      },
      "UserReportsCreateOperation_Payload_Data_Relationships_ReportedResources" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserReportsCreateOperation_Payload_Data_Relationships_ReportedResources_Data"
            }
          }
        }
      },
      "UserReportsCreateOperation_Payload_Data_Relationships_ReportedResources_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "artists", "playlists" ]
          }
        }
      },
      "UserReports_Attributes" : {
        "required" : [ "description", "reason" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "reason" : {
            "type" : "string",
            "description" : "Reason",
            "enum" : [ "SEXUAL_CONTENT_OR_NUDITY", "VIOLENT_OR_DANGEROUS_CONTENT", "HATEFUL_OR_ABUSIVE_CONTENT", "HARASSMENT", "PRIVACY_VIOLATION", "SCAMS_OR_FRAUD", "SPAM", "COPYRIGHT_INFRINGEMENT", "UNKNOWN" ]
          }
        }
      },
      "UserReports_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserReports_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserReports_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserReports_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "UserReports_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserReports_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Users_Attributes" : {
        "required" : [ "country", "username" ],
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "ISO 3166-1 alpha-2 country code",
            "example" : "US"
          },
          "email" : {
            "type" : "string",
            "description" : "email address",
            "example" : "test@test.com"
          },
          "emailVerified" : {
            "type" : "boolean",
            "description" : "Is the email verified",
            "example" : true
          },
          "firstName" : {
            "type" : "string",
            "description" : "Users first name",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Users last name",
            "example" : "Rambo"
          },
          "nostrPublicKey" : {
            "type" : "string",
            "description" : "Users nostr public key",
            "example" : "e3fc3965800f9c729b483a2a7291f30e569fbf5ab91a6eef332f9e28a5e923dd"
          },
          "username" : {
            "type" : "string",
            "description" : "user name",
            "example" : "username"
          }
        }
      },
      "Users_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Users_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Users_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Users_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Users_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Users_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Videos_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this video",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT2M58S"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Video links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "isrc" : {
            "type" : "string",
            "description" : "International Standard Recording Code (ISRC)",
            "example" : "TIDAL2274"
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-27"
          },
          "title" : {
            "type" : "string",
            "description" : "Video title",
            "example" : "Kill Jay Z"
          },
          "version" : {
            "type" : "string",
            "description" : "Video version, complements title",
            "example" : "original, mix etc"
          }
        }
      },
      "Videos_Multi_Relationship_Data_Document" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Videos_Multi_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Videos_Resource_Object"
            }
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Videos_Relationships" : {
        "required" : [ "albums", "artists", "providers", "thumbnailArt" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          },
          "thumbnailArt" : {
            "$ref" : "#/components/schemas/Multi_Relationship_Data_Document"
          }
        }
      },
      "Videos_Resource_Object" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Videos_Attributes"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource id",
            "example" : "12345"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Videos_Relationships"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Resource type",
            "example" : "tracks"
          }
        }
      },
      "Videos_Single_Resource_Data_Document" : {
        "required" : [ "data", "links" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Videos_Resource_Object"
          },
          "included" : {
            "$ref" : "#/components/schemas/Included"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      }
    },
    "securitySchemes" : {
      "Authorization_Code_PKCE" : {
        "description" : "See https://developer.tidal.com/documentation/authorization/authorization-authorization-code",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://login.tidal.com/authorize",
            "scopes" : {
              "collection.read" : "Read access to a user's \"My Collection\".",
              "collection.write" : "Write access to a user's \"My Collection\".",
              "entitlements.read" : "Read access to what functionality a user is entitled to access on TIDAL, such as whether they can stream music, use DJ add-ons and similar.",
              "playback" : "Required to play media content and control playback.",
              "playlists.read" : "Required to list playlists created by a user.",
              "playlists.write" : "Write access to a user's playlists.",
              "recommendations.read" : "Read access to a user’s personal recommendations.",
              "search.read" : "Required to read personalized search results.",
              "search.write" : "Required to update personalized search results, e.g. delete search history.",
              "user.read" : "Read access to a user's account information, such as country and email address."
            },
            "tokenUrl" : "https://auth.tidal.com/v1/oauth2/token",
            "x-scopes-required-access-tier" : {
              "collection.read" : "THIRD_PARTY",
              "collection.write" : "THIRD_PARTY",
              "entitlements.read" : "THIRD_PARTY",
              "playback" : "THIRD_PARTY",
              "playlists.read" : "THIRD_PARTY",
              "playlists.write" : "THIRD_PARTY",
              "recommendations.read" : "THIRD_PARTY",
              "search.read" : "THIRD_PARTY",
              "search.write" : "THIRD_PARTY",
              "user.read" : "THIRD_PARTY"
            }
          }
        },
        "type" : "oauth2"
      },
      "Client_Credentials" : {
        "description" : "See https://developer.tidal.com/documentation/authorization/authorization-client-credentials",
        "flows" : {
          "clientCredentials" : {
            "scopes" : { },
            "tokenUrl" : "https://auth.tidal.com/v1/oauth2/token"
          }
        },
        "type" : "oauth2"
      }
    }
  }
}