/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/albums/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single album.
         * @description Retrieves single album by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists, coverArt, items, providers, similarAlbums
                     * @example artists
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple albums.
         * @description Retrieves multiple albums by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists, coverArt, items, providers, similarAlbums
                     * @example artists
                     */
                    include?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on barcodeId attribute value
                     * @example 196589525444
                     */
                    "filter[barcodeId]"?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 251380836
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @description Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums/{id}/relationships/coverArt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get coverArt relationship ("to-many").
         * @description Retrieves coverArt relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: coverArt
                     * @example coverArt
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums/{id}/relationships/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get items relationship ("to-many").
         * @description Retrieves items relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: items
                     * @example items
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Items_Resource_Identifier"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums/{id}/relationships/providers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get providers relationship ("to-many").
         * @description Retrieves providers relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: providers
                     * @example providers
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/albums/{id}/relationships/similarAlbums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get similarAlbums relationship ("to-many").
         * @description Retrieves similarAlbums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: similarAlbums
                     * @example similarAlbums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Album id
                     * @example 251380836
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Albums_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artistRoles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single artistRole.
         * @description Retrieves single artistRole by id.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Artist role id
                     * @example 1
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["ArtistRoles_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artistRoles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple artistRoles.
         * @description Retrieves multiple artistRoles by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 1
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["ArtistRoles_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single artist.
         * @description Retrieves single artist by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update single artist.
         * @description Updates existing artist.
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["ArtistUpdateBody"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple artists.
         * @description Retrieves multiple artists by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos
                     * @example albums
                     */
                    include?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on handle attribute value
                     * @example jayz
                     */
                    "filter[handle]"?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 1566
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @description Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/profileArt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get profileArt relationship ("to-many").
         * @description Retrieves profileArt relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: profileArt
                     * @example profileArt
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/radio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get radio relationship ("to-many").
         * @description Retrieves radio relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: radio
                     * @example radio
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get roles relationship ("to-many").
         * @description Retrieves roles relationship.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: roles
                     * @example roles
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/similarArtists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get similarArtists relationship ("to-many").
         * @description Retrieves similarArtists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: similarArtists
                     * @example similarArtists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/trackProviders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get trackProviders relationship ("to-many").
         * @description Retrieves trackProviders relationship.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: trackProviders
                     * @example trackProviders
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_TrackProviders_Resource_Identifier"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get tracks relationship ("to-many").
         * @description Retrieves tracks relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Collapse by options for getting artist tracks. Available options: FINGERPRINT, ID. FINGERPRINT option might collapse similar tracks based entry fingerprints while collapsing by ID always returns all available items.
                     * @example FINGERPRINT
                     */
                    collapseBy: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: tracks
                     * @example tracks
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artists/{id}/relationships/videos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get videos relationship ("to-many").
         * @description Retrieves videos relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: videos
                     * @example videos
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artist id
                     * @example 1566
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artworks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single artwork.
         * @description Retrieves single artwork by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Artwork id
                     * @example a468bee88def
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artworks_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/artworks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple artworks.
         * @description Retrieves multiple artworks by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Artwork id
                     * @example a468bee88def
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Artworks_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/playlists/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single playlist.
         * @description Retrieves single playlist by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners
                     * @example coverArt
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete single playlist.
         * @description Deletes existing playlist.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update single playlist.
         * @description Updates existing playlist.
         */
        patch: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["PlaylistUpdateOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/playlists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple playlists.
         * @description Retrieves multiple playlists by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners
                     * @example coverArt
                     */
                    include?: string[];
                    /**
                     * @description User id
                     * @example 123456
                     */
                    "filter[r.owners.id]"?: string[];
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        /**
         * Create single playlist.
         * @description Creates a new playlist.
         */
        post: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["PlaylistCreateOperation_Payload"];
                };
            };
            responses: {
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/playlists/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get current user's playlist(s).
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the filter endpoint: /playlists?filter[r.owners.id]=<userId>
         *
         *     Retrieves current user's playlist(s).
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners
                     * @example coverArt
                     */
                    include?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/playlists/{id}/relationships/coverArt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get coverArt relationship ("to-many").
         * @description Retrieves coverArt relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: coverArt
                     * @example coverArt
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/playlists/{id}/relationships/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get items relationship ("to-many").
         * @description Retrieves items relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: items
                     * @example items
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Items_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        /**
         * Add to items relationship ("to-many").
         * @description Adds item(s) to items relationship.
         */
        post: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["PlaylistItemsRelationshipAddOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        /**
         * Delete from items relationship ("to-many").
         * @description Deletes item(s) from items relationship.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["PlaylistItemsRelationshipRemoveOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update items relationship ("to-many").
         * @description Updates items relationship.
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["PlaylistItemsRelationshipReorderOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/playlists/{id}/relationships/owners": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get owners relationship ("to-many").
         * @description Retrieves owners relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: owners
                     * @example owners
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Playlist id
                     * @example 550e8400-e29b-41d4-a716-446655440000
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Playlists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/providers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single provider.
         * @description Retrieves single provider by id.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description Provider id
                     * @example 771
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Providers_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/providers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple providers.
         * @description Retrieves multiple providers by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 771
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Providers_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single searchResult.
         * @description Retrieves single searchResult by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists, topHits, tracks, videos
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @description Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @description Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/playlists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get playlists relationship ("to-many").
         * @description Retrieves playlists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: playlists
                     * @example playlists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/topHits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get topHits relationship ("to-many").
         * @description Retrieves topHits relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: topHits
                     * @example topHits
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get tracks relationship ("to-many").
         * @description Retrieves tracks relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: tracks
                     * @example tracks
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchResults/{id}/relationships/videos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get videos relationship ("to-many").
         * @description Retrieves videos relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: videos
                     * @example videos
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchResults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchSuggestions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single searchSuggestion.
         * @description Retrieves single searchSuggestion by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: directHits
                     * @example directHits
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchSuggestions_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchSuggestions/{id}/relationships/directHits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get directHits relationship ("to-many").
         * @description Retrieves directHits relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Explicit filter
                     * @example include, exclude
                     */
                    explicitFilter?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: directHits
                     * @example directHits
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["SearchSuggestions_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single searchresult.
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves single searchresult by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists, topHits, tracks, videos
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/playlists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get playlists relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves playlists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: playlists
                     * @example playlists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/topHits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get topHits relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves topHits relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: topHits
                     * @example topHits
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get tracks relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves tracks relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: tracks
                     * @example tracks
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/searchresults/{id}/relationships/videos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get videos relationship ("to-many").
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.
         *
         *     Retrieves videos relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: videos
                     * @example videos
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Search query
                     * @example moon
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Searchresults_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/trackFiles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single trackFile.
         * @description Retrieves single trackFile by id.
         */
        get: {
            parameters: {
                query: {
                    formats: string;
                    usage: string;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["TrackFiles_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/trackManifests/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single trackManifest.
         * @description Retrieves single trackManifest by id.
         */
        get: {
            parameters: {
                query: {
                    manifestType: string;
                    formats: string;
                    uriScheme: string;
                    usage: string;
                    adaptive: string;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["TrackManifests_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single track.
         * @description Retrieves single track by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, radio, similarTracks
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple tracks.
         * @description Retrieves multiple tracks by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, radio, similarTracks
                     * @example albums
                     */
                    include?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on isrc attribute value
                     * @example USSM12209515
                     */
                    "filter[isrc]"?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 251380837
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @description Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @description Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}/relationships/providers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get providers relationship ("to-many").
         * @description Retrieves providers relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: providers
                     * @example providers
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}/relationships/radio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get radio relationship ("to-many").
         * @description Retrieves radio relationship.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: radio
                     * @example radio
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tracks/{id}/relationships/similarTracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get similarTracks relationship ("to-many").
         * @description Retrieves similarTracks relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: similarTracks
                     * @example similarTracks
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Track id
                     * @example 251380837
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Tracks_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userCollections/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single userCollection.
         * @description Retrieves single userCollection by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description BCP 47 locale
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserCollections_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userCollections/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @description Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP 47 locale
                     * @example en-US
                     */
                    locale: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserCollections_Albums_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        /**
         * Add to albums relationship ("to-many").
         * @description Adds item(s) to albums relationship.
         */
        post: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionAlbumsRelationshipAddOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        /**
         * Delete from albums relationship ("to-many").
         * @description Deletes item(s) from albums relationship.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionAlbumsRelationshipRemoveOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userCollections/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @description Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP 47 locale
                     * @example en-US
                     */
                    locale: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserCollections_Artists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        /**
         * Add to artists relationship ("to-many").
         * @description Adds item(s) to artists relationship.
         */
        post: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionArtistsRelationshipAddOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        /**
         * Delete from artists relationship ("to-many").
         * @description Deletes item(s) from artists relationship.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionArtistsRelationshipRemoveOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userCollections/{id}/relationships/playlists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get playlists relationship ("to-many").
         * @description Retrieves playlists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: playlists
                     * @example playlists
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserCollections_Playlists_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        /**
         * Add to playlists relationship ("to-many").
         * @description Adds item(s) to playlists relationship.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionPlaylistsRelationshipRemoveOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        /**
         * Delete from playlists relationship ("to-many").
         * @description Deletes item(s) from playlists relationship.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/vnd.api+json": components["schemas"]["UserCollectionPlaylistsRelationshipRemoveOperation_Payload"];
                };
            };
            responses: {
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userEntitlements/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single userEntitlement.
         * @description Retrieves single userEntitlement by id.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserEntitlements_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single userRecommendation.
         * @description Retrieves single userRecommendation by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP47 locale code
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: discoveryMixes, myMixes, newArrivalMixes
                     * @example discoveryMixes
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserRecommendations_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get current user's userRecommendation(s).
         * @deprecated
         * @description This operation is deprecated and will be removed shortly. Please switch to the equivalent /userRecommendations/{userId} endpoint. You can find your user id by calling /users/me.
         *
         *     Retrieves current user's userRecommendation(s).
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP47 locale code
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: discoveryMixes, myMixes, newArrivalMixes
                     * @example discoveryMixes
                     */
                    include?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserRecommendations_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/discoveryMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get discoveryMixes relationship ("to-many").
         * @description Retrieves discoveryMixes relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP47 locale code
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: discoveryMixes
                     * @example discoveryMixes
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserRecommendations_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/myMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get myMixes relationship ("to-many").
         * @description Retrieves myMixes relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP47 locale code
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: myMixes
                     * @example myMixes
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserRecommendations_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/newArrivalMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get newArrivalMixes relationship ("to-many").
         * @description Retrieves newArrivalMixes relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description BCP47 locale code
                     * @example en-US
                     */
                    locale: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: newArrivalMixes
                     * @example newArrivalMixes
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description User id
                     * @example 123456
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["UserRecommendations_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get current user's user(s).
         * @description Retrieves current user's user(s).
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Users_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single video.
         * @description Retrieves single video by id.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt
                     * @example albums
                     */
                    include?: string[];
                };
                header?: never;
                path: {
                    /**
                     * @description Video id
                     * @example 75623239
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Single_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple videos.
         * @description Retrieves multiple videos by available filters, or without if applicable.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt
                     * @example albums
                     */
                    include?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on isrc attribute value
                     * @example USSM21600755
                     */
                    "filter[isrc]"?: string[];
                    /**
                     * @description Allows to filter the collection of resources based on id attribute value
                     * @example 75623239
                     */
                    "filter[id]"?: string[];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Multi_Data_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos/{id}/relationships/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get albums relationship ("to-many").
         * @description Retrieves albums relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: albums
                     * @example albums
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Video id
                     * @example 75623239
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos/{id}/relationships/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get artists relationship ("to-many").
         * @description Retrieves artists relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: artists
                     * @example artists
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Video id
                     * @example 75623239
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos/{id}/relationships/providers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get providers relationship ("to-many").
         * @description Retrieves providers relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: providers
                     * @example providers
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Video id
                     * @example 75623239
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/videos/{id}/relationships/thumbnailArt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get thumbnailArt relationship ("to-many").
         * @description Retrieves thumbnailArt relationship.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 alpha-2 country code
                     * @example US
                     */
                    countryCode: string;
                    /**
                     * @description Allows the client to customize which related resources should be returned. Available options: thumbnailArt
                     * @example thumbnailArt
                     */
                    include?: string[];
                    /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                    "page[cursor]"?: string;
                };
                header?: never;
                path: {
                    /**
                     * @description Video id
                     * @example 75623239
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Videos_Multi_Data_Relationship_Document"];
                    };
                };
                /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Resource not found. The requested resource is not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
                405: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
                406: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
                415: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Too many HTTP requests have been made within the allowed time. */
                429: {
                    headers: {
                        /**
                         * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                         * @example 5
                         */
                        "X-RateLimit-Remaining": number;
                        /**
                         * @description Initial number of tokens, and max number of tokens that can be replenished.
                         * @example 20
                         */
                        "X-RateLimit-Burst-Capacity": number;
                        /**
                         * @description Number of tokens replenished per second.
                         * @example 5
                         */
                        "X-RateLimit-Replenish-Rate": number;
                        /**
                         * @description Request cost in tokens.
                         * @example 5
                         */
                        "X-RateLimit-Requested-Tokens": number;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unavailable For Legal Reasons */
                451: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
                /** @description Internal Server Error. Something went wrong on the server party. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.api+json": components["schemas"]["Error_Document"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Albums_Attributes: {
            /**
             * @description Album title
             * @example 4:44
             */
            title: string;
            /**
             * @description Barcode id (EAN-13 or UPC-A)
             * @example 00854242007552
             */
            barcodeId: string;
            /**
             * Format: int32
             * @description Number of volumes
             * @example 1
             */
            numberOfVolumes: number;
            /**
             * Format: int32
             * @description Number of items in album
             * @example 13
             */
            numberOfItems: number;
            /**
             * @description Duration (ISO 8601)
             * @example PT46M17S
             */
            duration: string;
            /**
             * @description Explicit content
             * @example true
             */
            explicit: boolean;
            /**
             * Format: date
             * @description Release date (ISO-8601)
             * @example 2017-06-30
             */
            releaseDate?: string;
            /**
             * @description Copyright
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * Format: double
             * @description Popularity (0.0 - 1.0)
             * @example 0.56
             */
            popularity: number;
            /** @description Available usage for this album */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            mediaTags: string[];
            /**
             * @deprecated
             * @description Album image links and metadata
             */
            imageLinks?: components["schemas"]["Image_Link"][];
            /**
             * @deprecated
             * @description Album video links and metadata
             */
            videoLinks?: components["schemas"]["Video_Link"][];
            /** @description Album links external to TIDAL API */
            externalLinks?: components["schemas"]["External_Link"][];
            /**
             * @description Album type
             * @enum {string}
             */
            type: "ALBUM" | "EP" | "SINGLE";
        };
        Albums_Items_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Albums_Items_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        Albums_Items_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["Albums_Items_Resource_Identifier_Meta"];
        };
        Albums_Items_Resource_Identifier_Meta: {
            /**
             * Format: int32
             * @description volume number
             * @example 1
             */
            volumeNumber: number;
            /**
             * Format: int32
             * @description track number
             * @example 4
             */
            trackNumber: number;
        };
        Albums_Multi_Data_Document: {
            data?: components["schemas"]["Albums_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artists_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Albums_Resource"])[];
        };
        Albums_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artists_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Albums_Resource"])[];
        };
        Albums_Relationships: {
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            similarAlbums: components["schemas"]["Multi_Data_Relationship_Doc"];
            coverArt: components["schemas"]["Multi_Data_Relationship_Doc"];
            items: components["schemas"]["Albums_Items_Multi_Data_Relationship_Document"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Albums_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Albums_Attributes"];
            relationships?: components["schemas"]["Albums_Relationships"];
        };
        Albums_Single_Data_Document: {
            data?: components["schemas"]["Albums_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artists_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Albums_Resource"])[];
        };
        ArtistRoles_Attributes: {
            name?: string;
        };
        ArtistRoles_Multi_Data_Document: {
            data?: components["schemas"]["ArtistRoles_Resource"][];
            links?: components["schemas"]["Links"];
        };
        ArtistRoles_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["ArtistRoles_Attributes"];
        };
        ArtistRoles_Single_Data_Document: {
            data?: components["schemas"]["ArtistRoles_Resource"];
            links?: components["schemas"]["Links"];
        };
        ArtistUpdateBody: {
            data: components["schemas"]["ArtistUpdateBody_Data"];
            meta?: components["schemas"]["ArtistUpdateBody_Meta"];
        };
        ArtistUpdateBody_Data: {
            id: string;
            /** @enum {string} */
            type: "artists";
            attributes: components["schemas"]["ArtistUpdateBody_Data_Attributes"];
        };
        ArtistUpdateBody_Data_Attributes: {
            name?: string;
            handle?: string;
            externalLinks?: components["schemas"]["External_Link"][];
        };
        ArtistUpdateBody_Meta: {
            dryRun?: boolean;
        };
        Artists_Attributes: {
            /**
             * @description Artist name
             * @example JAY Z
             */
            name: string;
            /**
             * Format: double
             * @description Artist popularity (0.0 - 1.0)
             * @example 0.56
             */
            popularity: number;
            /**
             * @deprecated
             * @description Artist image links and metadata
             */
            imageLinks?: components["schemas"]["Image_Link"][];
            /** @description Artist links external to TIDAL API */
            externalLinks?: components["schemas"]["External_Link"][];
            /**
             * @description Artist handle
             * @example jayz
             */
            handle?: string;
        };
        Artists_Multi_Data_Document: {
            data?: components["schemas"]["Artists_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["ArtistRoles_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Artists_Resource"])[];
        };
        Artists_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["ArtistRoles_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Artists_Resource"])[];
        };
        Artists_Relationships: {
            similarArtists: components["schemas"]["Multi_Data_Relationship_Doc"];
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            roles: components["schemas"]["Multi_Data_Relationship_Doc"];
            videos: components["schemas"]["Multi_Data_Relationship_Doc"];
            profileArt: components["schemas"]["Multi_Data_Relationship_Doc"];
            trackProviders: components["schemas"]["Artists_TrackProviders_Multi_Data_Relationship_Document"];
            tracks: components["schemas"]["Multi_Data_Relationship_Doc"];
            radio: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Artists_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Artists_Attributes"];
            relationships?: components["schemas"]["Artists_Relationships"];
        };
        Artists_Single_Data_Document: {
            data?: components["schemas"]["Artists_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["ArtistRoles_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Artists_Resource"])[];
        };
        Artists_TrackProviders_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Artists_TrackProviders_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        Artists_TrackProviders_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["Artists_TrackProviders_Resource_Identifier_Meta"];
        };
        Artists_TrackProviders_Resource_Identifier_Meta: {
            /**
             * Format: int64
             * @description total number of tracks released together with the provider
             * @example 14
             */
            numberOfTracks: number;
        };
        /** @description Artwork files */
        Artwork_File: {
            /** @description Artwork file href */
            href: string;
            meta?: components["schemas"]["Artwork_File_Meta"];
        };
        /** @description Metadata about an artwork file */
        Artwork_File_Meta: {
            /**
             * Format: int32
             * @description Width (in pixels)
             * @example 80
             */
            width: number;
            /**
             * Format: int32
             * @description Height (in pixels)
             * @example 80
             */
            height: number;
        };
        Artworks_Attributes: {
            /**
             * @description Media type of artwork files
             * @enum {string}
             */
            mediaType: "IMAGE" | "VIDEO";
            /** @description Artwork files */
            files: components["schemas"]["Artwork_File"][];
        };
        Artworks_Multi_Data_Document: {
            data?: components["schemas"]["Artworks_Resource"][];
            links?: components["schemas"]["Links"];
        };
        Artworks_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Artworks_Attributes"];
        };
        Artworks_Single_Data_Document: {
            data?: components["schemas"]["Artworks_Resource"];
            links?: components["schemas"]["Links"];
        };
        /** @description Track normalization data */
        AudioNormalizationData: {
            /** Format: float */
            replayGain?: number;
            /** Format: float */
            peakAmplitude?: number;
        };
        /** @description DRM data. Absence implies no DRM. */
        DrmData: {
            /** @enum {string} */
            drmSystem?: "FAIRPLAY" | "WIDEVINE";
            licenseUrl?: string;
            certificateUrl?: string;
        };
        /** @description JSON:API error document object */
        Error_Document: {
            /** @description array of error objects */
            errors?: components["schemas"]["Error_Object"][];
            links?: components["schemas"]["Links"];
        };
        /** @description JSON:API error object */
        Error_Object: {
            /** @description unique identifier for this particular occurrence of the problem */
            id?: string;
            /** @description HTTP status code applicable to this problem */
            status?: string;
            /** @description application-specific error code */
            code?: string;
            /** @description human-readable explanation specific to this occurrence of the problem */
            detail?: string;
            source?: components["schemas"]["Error_Object_Source"];
        };
        /** @description object containing references to the primary source of the error */
        Error_Object_Source: {
            /**
             * @description a JSON Pointer [RFC6901] to the value in the request document that caused the error
             * @example /data/attributes/title
             */
            pointer?: string;
            /**
             * @description string indicating which URI query parameter caused the error.
             * @example countryCode
             */
            parameter?: string;
            /**
             * @description string indicating the name of a single request header which caused the error
             * @example X-some-custom-header
             */
            header?: string;
        };
        External_Link: {
            href: string;
            meta: components["schemas"]["External_Link_Meta"];
        };
        /** @description metadata about an external link */
        External_Link_Meta: {
            /** @enum {string} */
            type: "TIDAL_SHARING" | "TIDAL_AUTOPLAY_ANDROID" | "TIDAL_AUTOPLAY_IOS" | "TIDAL_AUTOPLAY_WEB" | "TWITTER" | "FACEBOOK" | "INSTAGRAM" | "TIKTOK" | "SNAPCHAT" | "HOMEPAGE";
        };
        /** @deprecated */
        Image_Link: {
            href: string;
            meta: components["schemas"]["Image_Link_Meta"];
        };
        /** @description metadata about an image */
        Image_Link_Meta: {
            /**
             * Format: int32
             * @description image width (in pixels)
             * @example 80
             */
            width: number;
            /**
             * Format: int32
             * @description image height (in pixels)
             * @example 80
             */
            height: number;
        };
        /** @description Links JSON:API object */
        Links: {
            /**
             * @description the link that generated the current response document
             * @example /artists/xyz/relationships/tracks
             */
            self: string;
            /**
             * @description the next page of data (pagination)
             * @example /artists/xyz/relationships/tracks?page[cursor]=zyx
             */
            next?: string;
        };
        Multi_Data_Relationship_Doc: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        PlaylistCreateOperation_Payload: {
            data: components["schemas"]["PlaylistCreateOperation_Payload_Data"];
        };
        PlaylistCreateOperation_Payload_Data: {
            /** @enum {string} */
            type: "playlists";
            attributes: components["schemas"]["PlaylistCreateOperation_Payload_Data_Attributes"];
        };
        PlaylistCreateOperation_Payload_Data_Attributes: {
            name: string;
            description?: string;
            /** @enum {string} */
            privacy: "PUBLIC" | "PRIVATE";
        };
        PlaylistItemsRelationshipAddOperation_Payload: {
            data: components["schemas"]["PlaylistItemsRelationshipAddOperation_Payload_Data"][];
            meta?: components["schemas"]["PlaylistItemsRelationshipAddOperation_Payload_Meta"];
        };
        PlaylistItemsRelationshipAddOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "tracks" | "videos";
        };
        PlaylistItemsRelationshipAddOperation_Payload_Meta: {
            positionBefore: string;
        };
        PlaylistItemsRelationshipRemoveOperation_Payload: {
            data: components["schemas"]["PlaylistItemsRelationshipRemoveOperation_Payload_Data"][];
        };
        PlaylistItemsRelationshipRemoveOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "tracks" | "videos";
            meta: components["schemas"]["PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta"];
        };
        PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta: {
            itemId: string;
        };
        PlaylistItemsRelationshipReorderOperation_Payload: {
            data: components["schemas"]["PlaylistItemsRelationshipReorderOperation_Payload_Data"][];
            meta?: components["schemas"]["PlaylistItemsRelationshipReorderOperation_Payload_Meta"];
        };
        PlaylistItemsRelationshipReorderOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "tracks" | "videos";
            meta: components["schemas"]["PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta"];
        };
        PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta: {
            itemId: string;
        };
        PlaylistItemsRelationshipReorderOperation_Payload_Meta: {
            positionBefore: string;
        };
        PlaylistUpdateOperation_Payload: {
            data: components["schemas"]["PlaylistUpdateOperation_Payload_Data"];
        };
        PlaylistUpdateOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "playlists";
            attributes: components["schemas"]["PlaylistUpdateOperation_Payload_Data_Attributes"];
        };
        PlaylistUpdateOperation_Payload_Data_Attributes: {
            name?: string;
            description?: string;
            /** @enum {string} */
            privacy?: "PUBLIC" | "PRIVATE";
        };
        Playlists_Attributes: {
            /** @description Playlist name */
            name: string;
            /** @description Playlist description */
            description?: string;
            /** @description Indicates if the playlist has a duration and set number of tracks */
            bounded: boolean;
            /**
             * @description Duration of playlist (ISO 8601)
             * @example P30M5S
             */
            duration?: string;
            /**
             * Format: int32
             * @description Number of items in the playlist
             */
            numberOfItems?: number;
            externalLinks: components["schemas"]["External_Link"][];
            /** @deprecated */
            imageLinks: components["schemas"]["Image_Link"][];
            /**
             * Format: date-time
             * @description Datetime of playlist creation (ISO 8601)
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Datetime of last modification of the playlist (ISO 8601)
             */
            lastModifiedAt: string;
            /**
             * @description Privacy setting of the playlist
             * @enum {string}
             */
            privacy: "PUBLIC" | "PRIVATE";
            /**
             * @description The type of the playlist
             * @enum {string}
             */
            playlistType: "EDITORIAL" | "USER" | "MIX" | "ARTIST";
        };
        Playlists_Items_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Playlists_Items_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        Playlists_Items_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["Playlists_Items_Resource_Identifier_Meta"];
        };
        Playlists_Items_Resource_Identifier_Meta: {
            itemId?: string;
            /** Format: date-time */
            addedAt?: string;
        };
        Playlists_Multi_Data_Document: {
            data?: components["schemas"]["Playlists_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        Playlists_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Users_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        Playlists_Relationships: {
            owners: components["schemas"]["Multi_Data_Relationship_Doc"];
            coverArt: components["schemas"]["Multi_Data_Relationship_Doc"];
            items: components["schemas"]["Playlists_Items_Multi_Data_Relationship_Document"];
        };
        Playlists_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Playlists_Attributes"];
            relationships?: components["schemas"]["Playlists_Relationships"];
        };
        Playlists_Single_Data_Document: {
            data?: components["schemas"]["Playlists_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        Providers_Attributes: {
            /**
             * @description Provider name
             * @example Columbia/Legacy
             */
            name: string;
        };
        Providers_Multi_Data_Document: {
            data?: components["schemas"]["Providers_Resource"][];
            links?: components["schemas"]["Links"];
        };
        Providers_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Providers_Attributes"];
        };
        Providers_Single_Data_Document: {
            data?: components["schemas"]["Providers_Resource"];
            links?: components["schemas"]["Links"];
        };
        ResourceObjectObject: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: Record<string, never>;
            relationships?: Record<string, never>;
        };
        /** @description Resource identifier JSON:API object */
        Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        SearchResults_Attributes: {
            /**
             * @description search request unique tracking number
             * @example 5896e37d-e847-4ca6-9629-ef8001719f7f
             */
            trackingId: string;
            /**
             * @description 'did you mean' prompt
             * @example beatles
             */
            didYouMean?: string;
        };
        SearchResults_Multi_Data_Document: {
            data?: components["schemas"]["SearchResults_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"])[];
        };
        SearchResults_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["SearchResults_Resource"])[];
        };
        SearchResults_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            playlists: components["schemas"]["Multi_Data_Relationship_Doc"];
            videos: components["schemas"]["Multi_Data_Relationship_Doc"];
            topHits: components["schemas"]["Multi_Data_Relationship_Doc"];
            tracks: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        SearchResults_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["SearchResults_Attributes"];
            relationships?: components["schemas"]["SearchResults_Relationships"];
        };
        SearchResults_Single_Data_Document: {
            data?: components["schemas"]["SearchResults_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"])[];
        };
        SearchSuggestions_Attributes: {
            /** @description Unique tracking id */
            trackingId: string;
            /** @description Suggestions from search history */
            history?: components["schemas"]["SearchSuggestions_History"][];
            /** @description Suggested search queries */
            suggestions?: components["schemas"]["SearchSuggestions_Suggestions"][];
        };
        SearchSuggestions_Highlights: {
            /** Format: int32 */
            start: number;
            /** Format: int32 */
            length: number;
        };
        /** @description Suggestions from search history */
        SearchSuggestions_History: {
            query: string;
            highlights?: components["schemas"]["SearchSuggestions_Highlights"][];
        };
        SearchSuggestions_Multi_Data_Document: {
            data?: components["schemas"]["SearchSuggestions_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        SearchSuggestions_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["SearchSuggestions_Resource"])[];
        };
        SearchSuggestions_Relationships: {
            directHits: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        SearchSuggestions_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["SearchSuggestions_Attributes"];
            relationships?: components["schemas"]["SearchSuggestions_Relationships"];
        };
        SearchSuggestions_Single_Data_Document: {
            data?: components["schemas"]["SearchSuggestions_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Videos_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        /** @description Suggested search queries */
        SearchSuggestions_Suggestions: {
            query: string;
            highlights?: components["schemas"]["SearchSuggestions_Highlights"][];
        };
        Searchresults_Attributes: {
            /**
             * @description search request unique tracking number
             * @example 5896e37d-e847-4ca6-9629-ef8001719f7f
             */
            trackingId: string;
            /**
             * @description 'did you mean' prompt
             * @example beatles
             */
            didYouMean?: string;
        };
        Searchresults_Multi_Data_Document: {
            data?: components["schemas"]["Searchresults_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"])[];
        };
        Searchresults_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Searchresults_Resource"])[];
        };
        Searchresults_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            playlists: components["schemas"]["Multi_Data_Relationship_Doc"];
            videos: components["schemas"]["Multi_Data_Relationship_Doc"];
            topHits: components["schemas"]["Multi_Data_Relationship_Doc"];
            tracks: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Searchresults_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Searchresults_Attributes"];
            relationships?: components["schemas"]["Searchresults_Relationships"];
        };
        Searchresults_Single_Data_Document: {
            data?: components["schemas"]["Searchresults_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"])[];
        };
        Singleton_Data_Relationship_Doc: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
        };
        TrackFiles_Attributes: {
            /**
             * @description Track presentation
             * @enum {string}
             */
            trackPresentation?: "FULL" | "PREVIEW";
            /** @description File URL */
            url?: string;
            /**
             * @description File's audio format
             * @enum {string}
             */
            format?: "HEAACV1" | "AACLC" | "FLAC" | "FLAC_HIRES";
            albumAudioNormalizationData?: components["schemas"]["AudioNormalizationData"];
            trackAudioNormalizationData?: components["schemas"]["AudioNormalizationData"];
        };
        TrackFiles_Multi_Data_Document: {
            data?: components["schemas"]["TrackFiles_Resource"][];
            links?: components["schemas"]["Links"];
        };
        TrackFiles_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["TrackFiles_Attributes"];
        };
        TrackFiles_Single_Data_Document: {
            data?: components["schemas"]["TrackFiles_Resource"];
            links?: components["schemas"]["Links"];
        };
        TrackManifests_Attributes: {
            /**
             * @description Track presentation
             * @enum {string}
             */
            trackPresentation?: "FULL" | "PREVIEW";
            /** @description Manifest URI */
            uri?: string;
            /** @description Unique manifest hash */
            hash?: string;
            /** @description Formats present in manifest */
            formats?: ("HEAACV1" | "AACLC" | "FLAC" | "FLAC_HIRES")[];
            drmData?: components["schemas"]["DrmData"];
            albumAudioNormalizationData?: components["schemas"]["AudioNormalizationData"];
            trackAudioNormalizationData?: components["schemas"]["AudioNormalizationData"];
        };
        TrackManifests_Multi_Data_Document: {
            data?: components["schemas"]["TrackManifests_Resource"][];
            links?: components["schemas"]["Links"];
        };
        TrackManifests_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["TrackManifests_Attributes"];
        };
        TrackManifests_Single_Data_Document: {
            data?: components["schemas"]["TrackManifests_Resource"];
            links?: components["schemas"]["Links"];
        };
        Tracks_Attributes: {
            /**
             * @description Track title
             * @example Kill Jay Z
             */
            title: string;
            /**
             * @description Track version, complements title
             * @example original, mix etc
             */
            version?: string;
            /**
             * @description International Standard Recording Code (ISRC)
             * @example QMJMT1701229
             */
            isrc: string;
            /**
             * @description Duration (ISO 8601)
             * @example PT2M58S
             */
            duration: string;
            /**
             * @description Copyright
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * @description Explicit content
             * @example false
             */
            explicit: boolean;
            /**
             * Format: double
             * @description Popularity (0.0 - 1.0)
             * @example 0.56
             */
            popularity: number;
            /** @description Available usage for this track */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            mediaTags: string[];
            /** @description Track links external to TIDAL API */
            externalLinks?: components["schemas"]["External_Link"][];
        };
        Tracks_Multi_Data_Document: {
            data?: components["schemas"]["Tracks_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Tracks_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        Tracks_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Tracks_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        Tracks_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            similarTracks: components["schemas"]["Multi_Data_Relationship_Doc"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
            radio: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Tracks_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Tracks_Attributes"];
            relationships?: components["schemas"]["Tracks_Relationships"];
        };
        Tracks_Single_Data_Document: {
            data?: components["schemas"]["Tracks_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Tracks_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        UserCollectionAlbumsRelationshipAddOperation_Payload: {
            data: components["schemas"]["UserCollectionAlbumsRelationshipAddOperation_Payload_Data"][];
        };
        UserCollectionAlbumsRelationshipAddOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "albums";
        };
        UserCollectionAlbumsRelationshipRemoveOperation_Payload: {
            data: components["schemas"]["UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data"][];
        };
        UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "albums";
            meta: components["schemas"]["UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta"];
        };
        UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta: {
            itemId: string;
        };
        UserCollectionArtistsRelationshipAddOperation_Payload: {
            data: components["schemas"]["UserCollectionArtistsRelationshipAddOperation_Payload_Data"][];
        };
        UserCollectionArtistsRelationshipAddOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "artists";
        };
        UserCollectionArtistsRelationshipRemoveOperation_Payload: {
            data: components["schemas"]["UserCollectionArtistsRelationshipRemoveOperation_Payload_Data"][];
        };
        UserCollectionArtistsRelationshipRemoveOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "artists";
            meta: components["schemas"]["UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta"];
        };
        UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta: {
            itemId: string;
        };
        UserCollectionPlaylistsRelationshipRemoveOperation_Payload: {
            data: components["schemas"]["UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data"][];
        };
        UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data: {
            id: string;
            /** @enum {string} */
            type: "playlists";
        };
        UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data_Meta: {
            itemId: string;
        };
        UserCollections_Albums_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["UserCollections_Albums_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        UserCollections_Albums_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["UserCollections_Albums_Resource_Identifier_Meta"];
        };
        UserCollections_Albums_Resource_Identifier_Meta: {
            itemId?: string;
            /** Format: date-time */
            addedAt?: string;
        };
        UserCollections_Artists_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["UserCollections_Artists_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        UserCollections_Artists_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["UserCollections_Artists_Resource_Identifier_Meta"];
        };
        UserCollections_Artists_Resource_Identifier_Meta: {
            itemId?: string;
            /** Format: date-time */
            addedAt?: string;
        };
        UserCollections_Attributes: Record<string, never>;
        UserCollections_Multi_Data_Document: {
            data?: components["schemas"]["UserCollections_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"])[];
        };
        UserCollections_Playlists_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["UserCollections_Playlists_Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description Resource identifier JSON:API object */
        UserCollections_Playlists_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["UserCollections_Playlists_Resource_Identifier_Meta"];
        };
        UserCollections_Playlists_Resource_Identifier_Meta: {
            itemId?: string;
            /** Format: date-time */
            addedAt?: string;
        };
        UserCollections_Relationships: {
            albums: components["schemas"]["UserCollections_Albums_Multi_Data_Relationship_Document"];
            artists: components["schemas"]["UserCollections_Artists_Multi_Data_Relationship_Document"];
            playlists: components["schemas"]["UserCollections_Playlists_Multi_Data_Relationship_Document"];
        };
        UserCollections_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["UserCollections_Attributes"];
            relationships?: components["schemas"]["UserCollections_Relationships"];
        };
        UserCollections_Single_Data_Document: {
            data?: components["schemas"]["UserCollections_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"])[];
        };
        UserEntitlements_Attributes: {
            /** @description entitlements for user */
            entitlements: ("MUSIC" | "DJ")[];
        };
        UserEntitlements_Multi_Data_Document: {
            data?: components["schemas"]["UserEntitlements_Resource"][];
            links?: components["schemas"]["Links"];
        };
        UserEntitlements_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["UserEntitlements_Attributes"];
        };
        UserEntitlements_Single_Data_Document: {
            data?: components["schemas"]["UserEntitlements_Resource"];
            links?: components["schemas"]["Links"];
        };
        UserRecommendations_Attributes: Record<string, never>;
        UserRecommendations_Multi_Data_Document: {
            data?: components["schemas"]["UserRecommendations_Resource"][];
            links?: components["schemas"]["Links"];
            included?: components["schemas"]["Playlists_Resource"][];
        };
        UserRecommendations_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["UserRecommendations_Resource"])[];
        };
        UserRecommendations_Relationships: {
            discoveryMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
            newArrivalMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
            myMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        UserRecommendations_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["UserRecommendations_Attributes"];
            relationships?: components["schemas"]["UserRecommendations_Relationships"];
        };
        UserRecommendations_Single_Data_Document: {
            data?: components["schemas"]["UserRecommendations_Resource"];
            links?: components["schemas"]["Links"];
            included?: components["schemas"]["Playlists_Resource"][];
        };
        Users_Attributes: {
            /**
             * @description user name
             * @example username
             */
            username: string;
            /**
             * @description ISO 3166-1 alpha-2 country code
             * @example US
             */
            country: string;
            /**
             * @description email address
             * @example test@test.com
             */
            email?: string;
            /**
             * @description Is the email verified
             * @example true
             */
            emailVerified?: boolean;
            /**
             * @description Users first name
             * @example John
             */
            firstName?: string;
            /**
             * @description Users last name
             * @example Rambo
             */
            lastName?: string;
            /**
             * @description Users nostr public key
             * @example e3fc3965800f9c729b483a2a7291f30e569fbf5ab91a6eef332f9e28a5e923dd
             */
            nostrPublicKey?: string;
        };
        Users_Multi_Data_Document: {
            data?: components["schemas"]["Users_Resource"][];
            links?: components["schemas"]["Links"];
        };
        Users_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Users_Attributes"];
        };
        Users_Single_Data_Document: {
            data?: components["schemas"]["Users_Resource"];
            links?: components["schemas"]["Links"];
        };
        /** @deprecated */
        Video_Link: {
            href: string;
            meta: components["schemas"]["Video_Link_Meta"];
        };
        /** @description metadata about a video */
        Video_Link_Meta: {
            /**
             * Format: int32
             * @description video width (in pixels)
             * @example 80
             */
            width: number;
            /**
             * Format: int32
             * @description video height (in pixels)
             * @example 80
             */
            height: number;
        };
        Videos_Attributes: {
            /**
             * @description Video title
             * @example Kill Jay Z
             */
            title: string;
            /**
             * @description Video version, complements title
             * @example original, mix etc
             */
            version?: string;
            /**
             * @description International Standard Recording Code (ISRC)
             * @example TIDAL2274
             */
            isrc: string;
            /**
             * @description Duration (ISO 8601)
             * @example PT2M58S
             */
            duration: string;
            /**
             * @description Copyright
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * Format: date
             * @description Release date (ISO-8601)
             * @example 2017-06-27
             */
            releaseDate?: string;
            /**
             * @description Explicit content
             * @example false
             */
            explicit: boolean;
            /**
             * Format: double
             * @description Popularity (0.0 - 1.0)
             * @example 0.56
             */
            popularity: number;
            /** @description Available usage for this video */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            /**
             * @deprecated
             * @description Video image links and metadata
             */
            imageLinks?: components["schemas"]["Image_Link"][];
            /** @description Video links external to TIDAL API */
            externalLinks?: components["schemas"]["External_Link"][];
        };
        Videos_Multi_Data_Document: {
            data?: components["schemas"]["Videos_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Artworks_Resource"])[];
        };
        Videos_Multi_Data_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Artworks_Resource"] | components["schemas"]["Videos_Resource"])[];
        };
        Videos_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            thumbnailArt: components["schemas"]["Multi_Data_Relationship_Doc"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Videos_Resource: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            attributes?: components["schemas"]["Videos_Attributes"];
            relationships?: components["schemas"]["Videos_Relationships"];
        };
        Videos_Single_Data_Document: {
            data?: components["schemas"]["Videos_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Albums_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Artworks_Resource"])[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
