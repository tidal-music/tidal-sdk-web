/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/userPublicProfilePicks/{id}/relationships/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: item (read)
         * @description Retrieves a picks item relationship
         */
        get: operations["getUserPublicProfilePickItemRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Relationship: item (update)
         * @description Updates a picks item relationship, e.g. sets a 'track', 'album' or 'artist' reference.
         */
        patch: operations["setUserPublicProfilePickItemRelationship"];
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get multiple users by id
         * @description Get multiple users by id
         */
        get: operations["getUsersByFilters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single user by id
         * @description Get a single user by id
         */
        get: operations["getUserById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/relationships/recommendations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: user recommendations
         * @description Get user recommendations
         */
        get: operations["getUserRecommendationsRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/relationships/publicProfile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: public profile
         * @description Get user public profile
         */
        get: operations["getUserPublicProfileRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/relationships/entitlements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: entitlements
         * @description Get user entitlements relationship
         */
        get: operations["getUserEntitlementsRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the current user
         * @description Get the current user
         */
        get: operations["getMyUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get recommendations for users in batch
         * @description Get recommendations for users in batch
         */
        get: operations["getUserRecommendationsByFilters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user recommendations for user
         * @description Get user recommendations for user
         */
        get: operations["getUserRecommendationsById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/newArrivalMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: new arrivals mixes
         * @description Get new arrival mixes relationship
         */
        get: operations["getUserRecommendationsNewArrivalMixesRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/myMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: my mixes
         * @description Get my mixes relationship
         */
        get: operations["getUserRecommendationsMyMixesRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/{id}/relationships/discoveryMixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: discovery mixes
         * @description Get discovery mixes relationship
         */
        get: operations["getUserRecommendationsDiscoveryMixesRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userRecommendations/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the current users recommendations
         * @description Get the current users recommendations
         */
        get: operations["getMyUserRecommendations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user public profiles
         * @description Reads user public profile details by TIDAL user ids.
         */
        get: operations["getUserPublicProfilesByFilters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user public profile by id
         * @description Retrieve user public profile details by TIDAL user id.
         */
        get: operations["getUserPublicProfileById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/{id}/relationships/publicPlaylists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: playlists
         * @description Retrieves user's public playlists.
         */
        get: operations["getUserPublicProfilePublicPlaylistsRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/{id}/relationships/publicPicks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: picks
         * @description Retrieve user's public picks.
         */
        get: operations["getUserPublicProfilePublicPicksRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/{id}/relationships/following": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: following
         * @description Retrieve user's public followings
         */
        get: operations["getUserPublicProfileFollowingRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/{id}/relationships/followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: followers
         * @description Retrieve user's public followers
         */
        get: operations["getUserPublicProfileFollowersRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfiles/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get my user profile
         * @description Retrieve the logged-in user's public profile details.
         */
        get: operations["getMyUserPublicProfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfilePicks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get picks
         * @description Retrieves a filtered collection of user's public picks.
         */
        get: operations["getUserPublicProfilePicksByFilters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfilePicks/{id}/relationships/userPublicProfile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Relationship: user public profile
         * @description Retrieves a picks owner public profile
         */
        get: operations["getUserPublicProfilePickUserPublicProfileRelationship"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userPublicProfilePicks/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get my picks
         * @description Retrieves picks for the logged-in user.
         */
        get: operations["getMyUserPublicProfilePicks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userEntitlements/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user entitlements for user
         * @description Get user entitlements for user
         */
        get: operations["getUserEntitlementsById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/userEntitlements/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the current users entitlements
         * @description Get the current users entitlements
         */
        get: operations["getMyUserEntitlements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Error_Document: {
            /** @description array of error objects */
            errors?: components["schemas"]["Error_Object"][];
            links?: components["schemas"]["Links"];
        };
        Error_Object: {
            /** @description unique identifier for this particular occurrence of the problem */
            id?: string;
            /** @description HTTP status code applicable to this problem */
            status?: string;
            /** @description application-specific error code */
            code?: string;
            /** @description human-readable explanation specific to this occurrence of the problem */
            detail?: string;
            source?: components["schemas"]["Error_Object_Source"];
        };
        /** @description object containing references to the primary source of the error */
        Error_Object_Source: {
            /**
             * @description a JSON Pointer [RFC6901] to the value in the request document that caused the error
             * @example /data/attributes/title
             */
            pointer?: string;
            /**
             * @description string indicating which URI query parameter caused the error.
             * @example countryCode
             */
            parameter?: string;
            /**
             * @description string indicating the name of a single request header which caused the error
             * @example X-some-custom-header
             */
            header?: string;
        };
        /** @description links object */
        Links: {
            /**
             * @description the link that generated the current response document
             * @example /artists/xyz/relationships/tracks
             */
            self: string;
            /**
             * @description the next page of data (pagination)
             * @example /artists/xyz/relationships/tracks?page[cursor]=zyx
             */
            next?: string;
        };
        Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        Update_User_Public_Profile_Picks_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"];
        };
        /** @description metadata about an external link */
        External_Link_Meta: {
            /**
             * @description external link type
             * @example TIDAL_SHARING
             * @enum {string}
             */
            type: "TIDAL_SHARING" | "TIDAL_AUTOPLAY_ANDROID" | "TIDAL_AUTOPLAY_IOS" | "TIDAL_AUTOPLAY_WEB" | "TWITTER" | "FACEBOOK" | "INSTAGRAM" | "TIKTOK" | "SNAPCHAT" | "HOMEPAGE";
        };
        /** @description metadata about an image */
        Image_Link_Meta: {
            /**
             * Format: int32
             * @description image width (in pixels)
             * @example 80
             */
            width: number;
            /**
             * Format: int32
             * @description image height (in pixels)
             * @example 80
             */
            height: number;
        };
        /** @description Playlist owners relationship */
        Multi_Data_Relationship_Doc: {
            /** @description array of relationship resource linkages */
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
        };
        /** @description attributes object representing some of the resource's data */
        Playlists_Attributes: {
            /**
             * @description Playlist name
             * @example My Playlist
             */
            name: string;
            /**
             * @description Playlist description
             * @example All the good details about what is inside this playlist
             */
            description?: string;
            /**
             * @description Indicates if the playlist has a duration and set number of tracks
             * @example true
             */
            bounded: boolean;
            /**
             * @description Duration of the playlist expressed in accordance with ISO 8601
             * @example P30M5S
             */
            duration?: string;
            /**
             * Format: int32
             * @description Number of items in the playlist
             * @example 5
             */
            numberOfItems?: number;
            /**
             * @description Sharing links to the playlist
             * @example true
             */
            externalLinks: components["schemas"]["Playlists_External_Link"][];
            /**
             * Format: date-time
             * @description Datetime of playlist creation (ISO 8601)
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Datetime of last modification of the playlist (ISO 8601)
             */
            lastModifiedAt: string;
            /**
             * @description Privacy setting of the playlist
             * @example PUBLIC
             */
            privacy: string;
            /**
             * @description The type of the playlist
             * @example EDITORIAL
             */
            playlistType: string;
            /**
             * @description Images associated with the playlist
             * @example true
             */
            imageLinks: components["schemas"]["Playlists_Image_Link"][];
        };
        /**
         * @description Sharing links to the playlist
         * @example true
         */
        Playlists_External_Link: {
            /**
             * @description link to something that is related to a resource
             * @example https://tidal.com/browse/artist/1566
             */
            href: string;
            meta: components["schemas"]["External_Link_Meta"];
        };
        /**
         * @description Images associated with the playlist
         * @example true
         */
        Playlists_Image_Link: {
            /**
             * @description link to an image
             * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
             */
            href: string;
            meta?: components["schemas"]["Image_Link_Meta"];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Playlists_Relationships: {
            items: components["schemas"]["Multi_Data_Relationship_Doc"];
            owners: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Playlists_Resource: {
            attributes?: components["schemas"]["Playlists_Attributes"];
            relationships?: components["schemas"]["Playlists_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description Primary and Secondary color to visually render the pick */
        Prompt_Colors: {
            /**
             * @description Primary color to visually render the pick
             * @example #FF0000
             */
            primary: string;
            /**
             * @description Secondary color to visually render the pick
             * @example #00FF00
             */
            secondary: string;
        };
        /** @description Pick's owning user public profile relationship */
        Singleton_Data_Relationship_Doc: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
        };
        /** @description attributes object representing some of the resource's data */
        User_Entitlements_Attributes: {
            /** @description entitlements for user */
            entitlements: ("MUSIC" | "DJ")[];
        };
        User_Entitlements_Resource: {
            attributes?: components["schemas"]["User_Entitlements_Attributes"];
            /** @description relationships object describing relationships between the resource and other resources */
            relationships?: Record<string, never>;
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description attributes object representing some of the resource's data */
        User_Public_Profile_Picks_Attributes: {
            /**
             * @description Pick title
             * @example My favorite track on repeat
             */
            title: string;
            /**
             * @description Description of pick
             * @example This is the track I listen to when I need to focus
             */
            description: string;
            /**
             * @description CatalogueResourceType for supported item for the pick
             * @example TRACK
             * @enum {string}
             */
            supportedContentType: "TRACKS" | "VIDEOS" | "ALBUMS" | "ARTISTS" | "PROVIDERS";
            colors: components["schemas"]["Prompt_Colors"];
            /**
             * Format: date-time
             * @description Date of last modification of the pick (ISO 8601)
             * @example 2021-08-31T12:00:00Z
             */
            lastModifiedAt?: string;
        };
        /** @description relationships object describing relationships between the resource and other resources */
        User_Public_Profile_Picks_Relationships: {
            item: components["schemas"]["Singleton_Data_Relationship_Doc"];
            userPublicProfile: components["schemas"]["Singleton_Data_Relationship_Doc"];
        };
        User_Public_Profile_Picks_Resource: {
            attributes?: components["schemas"]["User_Public_Profile_Picks_Attributes"];
            relationships?: components["schemas"]["User_Public_Profile_Picks_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description attributes object representing some of the resource's data */
        User_Public_Profiles_Attributes: {
            /**
             * @description Public Name of the user profile
             * @example JohnSmith
             */
            profileName?: string;
            picture?: components["schemas"]["User_Public_Profiles_Image_Link"];
            color: string[];
            /** @description ExternalLinks for the user's profile */
            externalLinks?: components["schemas"]["User_Public_Profiles_External_Link"][];
            /**
             * Format: int32
             * @description Number of followers for the user
             * @example 32
             */
            numberOfFollowers?: number;
            /**
             * Format: int32
             * @description Number of users the user follows
             * @example 32
             */
            numberOfFollows?: number;
        };
        User_Public_Profiles_External_Link: {
            /**
             * @description link to something that is related to a resource
             * @example https://tidal.com/browse/artist/1566
             */
            href: string;
            meta: components["schemas"]["User_Public_Profiles_External_Link_Meta"];
        };
        /** @description metadata about an external link */
        User_Public_Profiles_External_Link_Meta: {
            /**
             * @description external link type
             * @example TIDAL_SHARING
             * @enum {string}
             */
            type: "TIDAL_SHARING" | "TIDAL_AUTOPLAY_ANDROID" | "TIDAL_AUTOPLAY_IOS" | "TIDAL_AUTOPLAY_WEB" | "TWITTER" | "FACEBOOK" | "INSTAGRAM" | "TIKTOK" | "SNAPCHAT" | "HOMEPAGE";
            /**
             * @description external link handle
             * @example JohnSmith
             */
            handle: string;
        };
        /** @description ImageLink to the users image */
        User_Public_Profiles_Image_Link: {
            /**
             * @description link to an image
             * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
             */
            href: string;
            meta?: components["schemas"]["Image_Link_Meta"];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        User_Public_Profiles_Relationships: {
            followers: components["schemas"]["Multi_Data_Relationship_Doc"];
            following: components["schemas"]["Multi_Data_Relationship_Doc"];
            publicPlaylists: components["schemas"]["Multi_Data_Relationship_Doc"];
            publicPicks: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        User_Public_Profiles_Resource: {
            attributes?: components["schemas"]["User_Public_Profiles_Attributes"];
            relationships?: components["schemas"]["User_Public_Profiles_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description attributes object representing some of the resource's data */
        User_Recommendations_Attributes: Record<string, never>;
        /** @description relationships object describing relationships between the resource and other resources */
        User_Recommendations_Relationships: {
            myMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
            discoveryMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
            newArrivalMixes: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        User_Recommendations_Resource: {
            attributes?: components["schemas"]["User_Recommendations_Attributes"];
            relationships?: components["schemas"]["User_Recommendations_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description attributes object representing some of the resource's data */
        Users_Attributes: {
            /**
             * @description user name
             * @example username
             */
            username: string;
            /**
             * @description ISO 3166-1 alpha-2 country code
             * @example US
             */
            country: string;
            /**
             * @description email address
             * @example test@test.com
             */
            email?: string;
            /**
             * @description Is the email verified
             * @example true
             */
            emailVerified?: boolean;
            /**
             * @description Users first name
             * @example John
             */
            firstName?: string;
            /**
             * @description Users last name
             * @example Rambo
             */
            lastName?: string;
        };
        Users_Multi_Data_Document: {
            /** @description array of primary resource data */
            data?: components["schemas"]["Users_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["User_Entitlements_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["User_Recommendations_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Users_Relationships: {
            entitlements: components["schemas"]["Singleton_Data_Relationship_Doc"];
            publicProfile: components["schemas"]["Singleton_Data_Relationship_Doc"];
            recommendations: components["schemas"]["Singleton_Data_Relationship_Doc"];
        };
        Users_Resource: {
            attributes?: components["schemas"]["Users_Attributes"];
            relationships?: components["schemas"]["Users_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        Users_Single_Data_Document: {
            data?: components["schemas"]["Users_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["User_Entitlements_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["User_Recommendations_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        Users_Recommendations_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["User_Recommendations_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        User_Public_Profiles_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["Users_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"])[];
        };
        User_Entitlements_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
            included?: components["schemas"]["User_Entitlements_Resource"][];
        };
        Catalogue_Item_External_Link: {
            /**
             * @description link to something that is related to a resource
             * @example https://tidal.com/browse/artist/1566
             */
            href: string;
            meta: components["schemas"]["External_Link_Meta"];
        };
        Catalogue_Item_Image_Link: {
            /**
             * @description link to an image
             * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
             */
            href: string;
            meta: components["schemas"]["Image_Link_Meta"];
        };
        /** @description attributes object representing some of the resource's data */
        Tracks_Attributes: {
            /**
             * @description Album item's title
             * @example Kill Jay Z
             */
            title: string;
            /**
             * @description Version of the album's item; complements title
             * @example Kill Jay Z
             */
            version?: string;
            /**
             * @description ISRC code
             * @example TIDAL2274
             */
            isrc: string;
            /**
             * @description Duration expressed in accordance with ISO 8601
             * @example P30M5S
             */
            duration: string;
            /**
             * @description Copyright information
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * @description Indicates whether a catalog item consist of any explicit content
             * @example false
             */
            explicit: boolean;
            /**
             * Format: double
             * @description Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
             * @example 0.56
             */
            popularity: number;
            /** @description Defines a catalog item availability e.g. for streaming, DJs, stems */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            mediaTags: string[];
            /** @description Represents available links to something that is related to a catalog item, but external to the TIDAL API */
            externalLinks?: components["schemas"]["Catalogue_Item_External_Link"][];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Tracks_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
            similarTracks: components["schemas"]["Multi_Data_Relationship_Doc"];
            radio: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Tracks_Resource: {
            attributes?: components["schemas"]["Tracks_Attributes"];
            relationships?: components["schemas"]["Tracks_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        User_Recommendations_Multi_Data_Document: {
            /** @description array of primary resource data */
            data?: components["schemas"]["User_Recommendations_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        /** @description attributes object representing some of the resource's data */
        Videos_Attributes: {
            /**
             * @description Album item's title
             * @example Kill Jay Z
             */
            title: string;
            /**
             * @description Version of the album's item; complements title
             * @example Kill Jay Z
             */
            version?: string;
            /**
             * @description ISRC code
             * @example TIDAL2274
             */
            isrc: string;
            /**
             * @description Duration expressed in accordance with ISO 8601
             * @example P30M5S
             */
            duration: string;
            /**
             * @description Copyright information
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * Format: date
             * @description Release date (ISO-8601)
             * @example 2017-06-27
             */
            releaseDate?: string;
            /**
             * @description Indicates whether a catalog item consist of any explicit content
             * @example false
             */
            explicit: boolean;
            /**
             * Format: double
             * @description Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
             * @example 0.56
             */
            popularity: number;
            /** @description Defines a catalog item availability e.g. for streaming, DJs, stems */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            /** @description Represents available links to, and metadata about, an album item images */
            imageLinks?: components["schemas"]["Catalogue_Item_Image_Link"][];
            /** @description Represents available links to something that is related to a catalog item, but external to the TIDAL API */
            externalLinks?: components["schemas"]["Catalogue_Item_External_Link"][];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Videos_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Videos_Resource: {
            attributes?: components["schemas"]["Videos_Attributes"];
            relationships?: components["schemas"]["Videos_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        User_Recommendations_Single_Data_Document: {
            data?: components["schemas"]["User_Recommendations_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        Playlists_Relationship_Document: {
            /** @description array of relationship resource linkages */
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        /** @description attributes object representing some of the resource's data */
        Albums_Attributes: {
            /**
             * @description Original title
             * @example 4:44
             */
            title: string;
            /**
             * @description Barcode id (EAN-13 or UPC-A)
             * @example 00854242007552
             */
            barcodeId: string;
            /**
             * Format: int32
             * @description Number of volumes
             * @example 1
             */
            numberOfVolumes: number;
            /**
             * Format: int32
             * @description Number of album items
             * @example 13
             */
            numberOfItems: number;
            /**
             * @description Duration (ISO-8601)
             * @example P41M5S
             */
            duration: string;
            /**
             * @description Indicates whether an album consist of any explicit content
             * @example true
             */
            explicit: boolean;
            /**
             * Format: date
             * @description Release date (ISO-8601)
             * @example 2017-06-30
             */
            releaseDate?: string;
            /**
             * @description Copyright information
             * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
             */
            copyright?: string;
            /**
             * Format: double
             * @description Album popularity (ranged in 0.00 ... 1.00). Conditionally visible
             * @example 0.56
             */
            popularity: number;
            /** @description Defines an album availability e.g. for streaming, DJs, stems */
            availability?: ("STREAM" | "DJ" | "STEM")[];
            mediaTags: string[];
            /** @description Represents available links to, and metadata about, an album cover images */
            imageLinks?: components["schemas"]["Catalogue_Item_Image_Link"][];
            /** @description Represents available links to, and metadata about, an album cover videos */
            videoLinks?: components["schemas"]["Catalogue_Item_Video_Link"][];
            /** @description Represents available links to something that is related to an album resource, but external to the TIDAL API */
            externalLinks?: components["schemas"]["Catalogue_Item_External_Link"][];
        };
        Albums_Item_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["Albums_Item_Resource_Identifier_Meta"];
        };
        Albums_Item_Resource_Identifier_Meta: {
            /**
             * Format: int32
             * @description volume number
             * @example 1
             */
            volumeNumber: number;
            /**
             * Format: int32
             * @description track number
             * @example 4
             */
            trackNumber: number;
        };
        /** @description Album items (tracks/videos) relationship */
        Albums_Items_Relationship: {
            data?: components["schemas"]["Albums_Item_Resource_Identifier"][][];
            links?: components["schemas"]["Links"];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Albums_Relationships: {
            artists: components["schemas"]["Multi_Data_Relationship_Doc"];
            items: components["schemas"]["Albums_Items_Relationship"];
            similarAlbums: components["schemas"]["Multi_Data_Relationship_Doc"];
            providers: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Albums_Resource: {
            attributes?: components["schemas"]["Albums_Attributes"];
            relationships?: components["schemas"]["Albums_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description attributes object representing some of the resource's data */
        Artists_Attributes: {
            /**
             * @description Artist name
             * @example JAY Z
             */
            name: string;
            /**
             * Format: double
             * @description Artist popularity (ranged in 0.00 ... 1.00). Conditionally visible
             * @example 0.56
             */
            popularity: number;
            /** @description Represents available links to, and metadata about, an artist images */
            imageLinks?: components["schemas"]["Catalogue_Item_Image_Link"][];
            /** @description Represents available links to something that is related to an artist resource, but external to the TIDAL API */
            externalLinks?: components["schemas"]["Catalogue_Item_External_Link"][];
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Artists_Relationships: {
            albums: components["schemas"]["Multi_Data_Relationship_Doc"];
            tracks: components["schemas"]["Multi_Data_Relationship_Doc"];
            videos: components["schemas"]["Multi_Data_Relationship_Doc"];
            similarArtists: components["schemas"]["Multi_Data_Relationship_Doc"];
            trackProviders: components["schemas"]["Artists_Track_Providers_Relationship"];
            radio: components["schemas"]["Multi_Data_Relationship_Doc"];
        };
        Artists_Resource: {
            attributes?: components["schemas"]["Artists_Attributes"];
            relationships?: components["schemas"]["Artists_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        /** @description Providers that have released tracks for this artist */
        Artists_Track_Providers_Relationship: {
            data?: components["schemas"]["Artists_Track_Providers_Resource_Identifier"][][];
            links?: components["schemas"]["Links"];
        };
        Artists_Track_Providers_Resource_Identifier: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: components["schemas"]["Artists_Track_Providers_Resource_Identifier_Meta"];
        };
        Artists_Track_Providers_Resource_Identifier_Meta: {
            /**
             * Format: int64
             * @description total number of tracks released together with the provider
             * @example 14
             */
            numberOfTracks: number;
        };
        Catalogue_Item_Video_Link: {
            /**
             * @description link to a video
             * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.mp4
             */
            href: string;
            meta: components["schemas"]["Video_Link_Meta"];
        };
        User_Public_Profiles_Multi_Data_Document: {
            /** @description array of primary resource data */
            data?: components["schemas"]["User_Public_Profiles_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Users_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["User_Entitlements_Resource"] | components["schemas"]["User_Recommendations_Resource"])[];
        };
        /** @description metadata about a video */
        Video_Link_Meta: {
            /**
             * Format: int32
             * @description video width (in pixels)
             * @example 80
             */
            width: number;
            /**
             * Format: int32
             * @description video height (in pixels)
             * @example 80
             */
            height: number;
        };
        User_Public_Profiles_Single_Data_Document: {
            data?: components["schemas"]["User_Public_Profiles_Resource"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Users_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["User_Entitlements_Resource"] | components["schemas"]["User_Recommendations_Resource"])[];
        };
        User_Public_Profile_Picks_Relationship_Document: {
            /** @description array of relationship resource linkages */
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["User_Public_Profiles_Resource"])[];
        };
        Users_Relationship_Document: {
            /** @description array of relationship resource linkages */
            data?: components["schemas"]["Resource_Identifier"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Users_Resource"] | components["schemas"]["User_Entitlements_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["User_Recommendations_Resource"])[];
        };
        /** @description attributes object representing some of the resource's data */
        Providers_Attributes: {
            /**
             * @description Provider name. Conditionally visible.
             * @example Columbia/Legacy
             */
            name: string;
        };
        /** @description relationships object describing relationships between the resource and other resources */
        Providers_Relationships: Record<string, never>;
        Providers_Resource: {
            attributes?: components["schemas"]["Providers_Attributes"];
            relationships?: components["schemas"]["Providers_Relationships"];
            links?: components["schemas"]["Links"];
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
        };
        User_Public_Profile_Picks_Multi_Data_Document: {
            /** @description array of primary resource data */
            data?: components["schemas"]["User_Public_Profile_Picks_Resource"][];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["User_Public_Profiles_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Playlists_Resource"] | components["schemas"]["User_Public_Profile_Picks_Resource"] | components["schemas"]["Users_Resource"])[];
        };
        User_Public_Profile_Picks_Item_Relationship_Document: {
            data?: components["schemas"]["Resource_Identifier"];
            links?: components["schemas"]["Links"];
            included?: (components["schemas"]["Tracks_Resource"] | components["schemas"]["Artists_Resource"] | components["schemas"]["Albums_Resource"] | components["schemas"]["Videos_Resource"] | components["schemas"]["Providers_Resource"] | components["schemas"]["Playlists_Resource"])[];
        };
        User_Entitlements_Single_Data_Document: {
            data?: components["schemas"]["User_Entitlements_Resource"];
            links?: components["schemas"]["Links"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getUserPublicProfilePickItemRelationship: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: item
                 * @example item
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL pick id
                 * @example b73h3
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profile_Picks_Item_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    setUserPublicProfilePickItemRelationship: {
        parameters: {
            query?: {
                /** @description Allows the client to customize which related resources should be returned */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL pick id
                 * @example b73h=3
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/vnd.api+json": components["schemas"]["Update_User_Public_Profile_Picks_Relationship_Document"];
            };
        };
        responses: {
            /** @description Successfully executed request. */
            202: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUsersByFilters: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations
                 * @example entitlements
                 */
                include?: string[];
                /**
                 * @description Allows to filter the collection of resources based on id attribute value
                 * @example 251380836
                 */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Multi_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserById: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations
                 * @example entitlements
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User Id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: recommendations
                 * @example recommendations
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User Id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Recommendations_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfileRelationship: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicProfile
                 * @example publicProfile
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User Id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profiles_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserEntitlementsRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: entitlements
                 * @example entitlements
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User Id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Entitlements_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getMyUser: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations
                 * @example entitlements
                 */
                include?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsByFilters: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: myMixes, discoveryMixes, newArrivalMixes
                 * @example myMixes
                 */
                include?: string[];
                /**
                 * @description User recommendations id
                 * @example 251380836
                 */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Recommendations_Multi_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsById: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: myMixes, discoveryMixes, newArrivalMixes
                 * @example myMixes
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User recommendations id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Recommendations_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsNewArrivalMixesRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: newArrivalMixes
                 * @example newArrivalMixes
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description User recommendations id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Playlists_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsMyMixesRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: myMixes
                 * @example myMixes
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description User recommendations id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Playlists_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserRecommendationsDiscoveryMixesRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: discoveryMixes
                 * @example discoveryMixes
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description User recommendations id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Playlists_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getMyUserRecommendations: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: myMixes, discoveryMixes, newArrivalMixes
                 * @example myMixes
                 */
                include?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Recommendations_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfilesByFilters: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following
                 * @example publicPlaylists
                 */
                include?: string[];
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User profile retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profiles_Multi_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfileById: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following
                 * @example publicPlaylists
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User profile retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profiles_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfilePublicPlaylistsRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicPlaylists
                 * @example publicPlaylists
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Public playlists retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Playlists_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfilePublicPicksRelationship: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicPicks
                 * @example publicPicks
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Public picks retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profile_Picks_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfileFollowingRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: following
                 * @example following
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Public following retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfileFollowersRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: followers
                 * @example followers
                 */
                include?: string[];
                /** @description Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified */
                "page[cursor]"?: string;
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL user id
                 * @example 1234567890
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Public followers retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Users_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getMyUserPublicProfile: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following
                 * @example publicPlaylists
                 */
                include?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User profile retrieved successfully */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profiles_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfilePicksByFilters: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: item, userPublicProfile
                 * @example item
                 */
                include?: string[];
                /**
                 * @description Allows to filter the collection of resources based on id attribute value
                 * @example 123123
                 */
                "filter[id]"?: string[];
                /**
                 * @description Allows to filter the collection of resources based on userPublicProfile.id attribute value
                 * @example 123123
                 */
                "filter[userPublicProfile.id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profile_Picks_Multi_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserPublicProfilePickUserPublicProfileRelationship: {
        parameters: {
            query?: {
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: userPublicProfile
                 * @example userPublicProfile
                 */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description TIDAL pick id
                 * @example b73h=3
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profiles_Relationship_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getMyUserPublicProfilePicks: {
        parameters: {
            query: {
                /**
                 * @description Locale language tag (IETF BCP 47 Language Tag)
                 * @example en-US
                 */
                locale: string;
                /**
                 * @description Allows the client to customize which related resources should be returned. Available options: item, userPublicProfile
                 * @example item
                 */
                include?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Public_Profile_Picks_Multi_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getUserEntitlementsById: {
        parameters: {
            query?: {
                /** @description Allows the client to customize which related resources should be returned */
                include?: string[];
            };
            header?: never;
            path: {
                /**
                 * @description User entitlements id
                 * @example 251380836
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Entitlements_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
    getMyUserEntitlements: {
        parameters: {
            query?: {
                /** @description Allows the client to customize which related resources should be returned */
                include?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully executed request. */
            200: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["User_Entitlements_Single_Data_Document"];
                };
            };
            /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
            400: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Resource not found. The requested resource is not found. */
            404: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
            405: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
            406: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
            415: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
            /** @description Internal Server Error. Something went wrong on the server party. */
            500: {
                headers: {
                    /**
                     * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
                     * @example 5
                     */
                    "X-RateLimit-Remaining": number;
                    /**
                     * @description Initial number of tokens, and max number of tokens that can be replenished.
                     * @example 20
                     */
                    "X-RateLimit-Burst-Capacity": number;
                    /**
                     * @description Number of tokens replenished per second.
                     * @example 5
                     */
                    "X-RateLimit-Replenish-Rate": number;
                    /**
                     * @description Request cost in tokens.
                     * @example 5
                     */
                    "X-RateLimit-Requested-Tokens": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": components["schemas"]["Error_Document"];
                };
            };
        };
    };
}
