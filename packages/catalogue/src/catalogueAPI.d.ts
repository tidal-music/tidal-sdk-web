/* eslint-disable */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/videos": {
    /**
     * Get multiple videos
     * @description Retrieve multiple video details.
     */
    get: operations["getVideos"];
  };
  "/videos/{id}": {
    /**
     * Get single video
     * @description Retrieve video details by TIDAL video id.
     */
    get: operations["getVideo"];
  };
  "/videos/{id}/relationships/providers": {
    /**
     * Relationship: providers
     * @description This endpoint can be used to retrieve a list of video's related providers.
     */
    get: operations["getVideoProviders"];
  };
  "/videos/{id}/relationships/artists": {
    /**
     * Relationship: artists
     * @description Retrieve artist details of the related video.
     */
    get: operations["getVideoArtists"];
  };
  "/videos/{id}/relationships/albums": {
    /**
     * Relationship: albums
     * @description Retrieve album details of the related video.
     */
    get: operations["getVideoAlbums"];
  };
  "/tracks": {
    /**
     * Get multiple tracks
     * @description Retrieve multiple track details.
     */
    get: operations["getTracks"];
  };
  "/tracks/{id}": {
    /**
     * Get single track
     * @description Retrieve track details by TIDAL track id.
     */
    get: operations["getTrack"];
  };
  "/tracks/{id}/relationships/similarTracks": {
    /**
     * Relationship: similar tracks
     * @description This endpoint can be used to retrieve a list of tracks similar to the given track.
     */
    get: operations["getSimilarAlbums"];
  };
  "/tracks/{id}/relationships/providers": {
    /**
     * Relationship: providers
     * @description This endpoint can be used to retrieve a list of track's related providers.
     */
    get: operations["getTrackProviders"];
  };
  "/tracks/{id}/relationships/artists": {
    /**
     * Relationship: artists
     * @description Retrieve artist details of the related track.
     */
    get: operations["getTrackArtists"];
  };
  "/tracks/{id}/relationships/albums": {
    /**
     * Relationship: albums
     * @description Retrieve album details of the related track.
     */
    get: operations["getTrackAlbums"];
  };
  "/providers": {
    /**
     * Get multiple providers
     * @description Retrieve multiple provider details.
     */
    get: operations["getProviders"];
  };
  "/providers/{id}": {
    /**
     * Get single provider
     * @description Retrieve provider details by TIDAL provider id.
     */
    get: operations["getProvider"];
  };
  "/artists": {
    /**
     * Get multiple artists
     * @description Retrieve multiple artist details.
     */
    get: operations["getArtists"];
  };
  "/artists/{id}": {
    /**
     * Get single artist
     * @description Retrieve artist details by TIDAL artist id.
     */
    get: operations["getArtist"];
  };
  "/artists/{id}/relationships/videos": {
    /**
     * Relationship: videos
     * @description Retrieve video details by related artist.
     */
    get: operations["getArtistVideos"];
  };
  "/artists/{id}/relationships/tracks": {
    /**
     * Relationship: tracks
     * @description Retrieve track details by related artist.
     */
    get: operations["getArtistTracks"];
  };
  "/artists/{id}/relationships/similarArtists": {
    /**
     * Relationship: similar artists
     * @description This endpoint can be used to retrieve a list of artists similar to the given artist.
     */
    get: operations["getSimilarArtists"];
  };
  "/artists/{id}/relationships/albums": {
    /**
     * Relationship: albums
     * @description Retrieve album details of the related artist.
     */
    get: operations["getArtistAlbums"];
  };
  "/albums": {
    /**
     * Get multiple albums
     * @description Retrieve multiple album details.
     */
    get: operations["getAlbums"];
  };
  "/albums/{id}": {
    /**
     * Get single album
     * @description Retrieve album details by TIDAL album id.
     */
    get: operations["getAlbum"];
  };
  "/albums/{id}/relationships/similarAlbums": {
    /**
     * Relationship: similar albums
     * @description This endpoint can be used to retrieve a list of albums similar to the given album.
     */
    get: operations["getSimilarAlbums_1"];
  };
  "/albums/{id}/relationships/providers": {
    /**
     * Relationship: providers
     * @description This endpoint can be used to retrieve a list of album's related providers.
     */
    get: operations["getAlbumProviders"];
  };
  "/albums/{id}/relationships/items": {
    /**
     * Relationship: items
     * @description Retrieve album item details.
     */
    get: operations["getAlbumItems"];
  };
  "/albums/{id}/relationships/artists": {
    /**
     * Relationship: artists
     * @description Retrieve artist details of the related album.
     */
    get: operations["getAlbumArtists"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error_Document: {
      /** @description array of error objects */
      errors?: components["schemas"]["Error_Object"][];
      links?: components["schemas"]["Links"];
    };
    Error_Object: {
      /** @description unique identifier for this particular occurrence of the problem */
      id?: string;
      /** @description HTTP status code applicable to this problem */
      status?: string;
      /** @description application-specific error code */
      code?: string;
      /** @description human-readable explanation specific to this occurrence of the problem */
      detail?: string;
      source?: components["schemas"]["Error_Object_Source"];
    };
    /** @description object containing references to the primary source of the error */
    Error_Object_Source: {
      /**
       * @description a JSON Pointer [RFC6901] to the value in the request document that caused the error
       * @example /data/attributes/title
       */
      pointer?: string;
      /**
       * @description string indicating which URI query parameter caused the error.
       * @example countryCode
       */
      parameter?: string;
      /**
       * @description string indicating the name of a single request header which caused the error
       * @example X-some-custom-header
       */
      header?: string;
    };
    /** @description links object */
    Links: {
      /**
       * @description the link that generated the current response document
       * @example /artists/xyz/relationships/tracks
       */
      self: string;
      /**
       * @description the next page of data (pagination)
       * @example /artists/xyz/relationships/tracks?page[cursor]=zyx
       */
      next?: string;
    };
    Album_Attributes: {
      /**
       * @description Original title
       * @example 4:44
       */
      title: string;
      /**
       * @description Barcode id (EAN-13 or UPC-A)
       * @example 00854242007552
       */
      barcodeId: string;
      /**
       * Format: int32
       * @description Number of volumes
       * @example 1
       */
      numberOfVolumes: number;
      /**
       * Format: int32
       * @description Number of album items
       * @example 13
       */
      numberOfItems: number;
      /**
       * @description Duration (ISO-8601)
       * @example P41M5S
       */
      duration: string;
      /**
       * @description Indicates whether an album consist of any explicit content
       * @example true
       */
      explicit: boolean;
      /**
       * Format: date
       * @description Release date (ISO-8601)
       * @example 2017-06-30
       */
      releaseDate?: string;
      /**
       * @description Copyright information
       * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
       */
      copyright?: string;
      /**
       * Format: double
       * @description Album popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
      /** @description Defines an album availability e.g. for streaming, DJs, stems */
      availability?: ("STREAM" | "DJ" | "STEM")[];
      mediaTags: string[];
      /** @description Represents available links to, and metadata about, an album cover images */
      imageLinks?: components["schemas"]["Image_Link"][];
      /** @description Represents available links to, and metadata about, an album cover videos */
      videoLinks?: components["schemas"]["Video_Link"][];
      /** @description Represents available links to something that is related to an album resource, but external to the TIDAL API */
      externalLinks?: components["schemas"]["External_Link"][];
    };
    Artist_Attributes: {
      /**
       * @description Artist name
       * @example JAY Z
       */
      name: string;
      /**
       * Format: double
       * @description Artist popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
      /** @description Represents available links to, and metadata about, an artist images */
      imageLinks?: components["schemas"]["Image_Link"][];
      /** @description Represents available links to something that is related to an artist resource, but external to the TIDAL API */
      externalLinks?: components["schemas"]["External_Link"][];
    };
    External_Link: {
      /**
       * @description link to something that is related to a resource
       * @example https://tidal.com/browse/artist/1566
       */
      href: string;
      meta: components["schemas"]["External_Link_Meta"];
    };
    /** @description metadata about an external link */
    External_Link_Meta: {
      /**
       * @description external link type
       * @example TIDAL_SHARING
       * @enum {string}
       */
      type: "TIDAL_SHARING" | "TIDAL_AUTOPLAY_ANDROID" | "TIDAL_AUTOPLAY_IOS" | "TIDAL_AUTOPLAY_WEB" | "TWITTER" | "FACEBOOK" | "INSTAGRAM" | "TIKTOK" | "SNAPCHAT" | "HOMEPAGE";
    };
    Image_Link: {
      /**
       * @description link to an image
       * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg
       */
      href: string;
      meta: components["schemas"]["Image_Link_Meta"];
    };
    /** @description metadata about an image */
    Image_Link_Meta: {
      /**
       * Format: int32
       * @description image width (in pixels)
       * @example 80
       */
      width: number;
      /**
       * Format: int32
       * @description image height (in pixels)
       * @example 80
       */
      height: number;
    };
    Provider_Attributes: {
      /**
       * @description Provider name. Conditionally visible.
       * @example Columbia/Legacy
       */
      name: string;
    };
    /** @description relationships object describing relationships between the resource and other resources */
    Relationship: {
      /** @description resource linkage */
      data?: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
    };
    Resource_Identifier: {
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description attributes object representing some of the resource's data */
    Video_Attributes: {
      /**
       * @description Album item's title
       * @example Kill Jay Z
       */
      title: string;
      /**
       * @description Version of the album's item; complements title
       * @example Kill Jay Z
       */
      version?: string;
      /**
       * @description ISRC code
       * @example TIDAL2274
       */
      isrc: string;
      /**
       * @description Duration expressed in accordance with ISO 8601
       * @example P30M5S
       */
      duration: string;
      /**
       * @description Copyright information
       * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
       */
      copyright?: string;
      /**
       * Format: date
       * @description Release date (ISO-8601)
       * @example 2017-06-27
       */
      releaseDate?: string;
      /**
       * @description Indicates whether a catalog item consist of any explicit content
       * @example false
       */
      explicit: boolean;
      /**
       * Format: double
       * @description Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
      /** @description Defines a catalog item availability e.g. for streaming, DJs, stems */
      availability?: ("STREAM" | "DJ" | "STEM")[];
      /** @description Represents available links to, and metadata about, an album item images */
      imageLinks?: components["schemas"]["Image_Link"][];
      /** @description Represents available links to something that is related to a catalog item, but external to the TIDAL API */
      externalLinks?: components["schemas"]["External_Link"][];
    };
    Video_Link: {
      /**
       * @description link to a video
       * @example https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.mp4
       */
      href: string;
      meta: components["schemas"]["Video_Link_Meta"];
    };
    /** @description metadata about a video */
    Video_Link_Meta: {
      /**
       * Format: int32
       * @description video width (in pixels)
       * @example 80
       */
      width: number;
      /**
       * Format: int32
       * @description video height (in pixels)
       * @example 80
       */
      height: number;
    };
    /** @description attributes object representing some of the resource's data */
    Video_Relationship: components["schemas"]["Album_Attributes"] | components["schemas"]["Artist_Attributes"] | components["schemas"]["Provider_Attributes"];
    /** @description array of resource objects that are related to the primary data and/or each other */
    Video_Relationship_Resource: {
      attributes?: components["schemas"]["Video_Relationship"];
      /** @description relationships object describing relationships between the resource and other resources */
      relationships?: {
        [key: string]: components["schemas"]["Relationship"];
      };
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description document's primary data */
    Video_Resource: {
      attributes?: components["schemas"]["Video_Attributes"];
      relationships?: components["schemas"]["Available_Video_Relationships"];
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    Videos_Data_Document: {
      /** @description document's primary data */
      data: components["schemas"]["Video_Resource"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Video_Relationship_Resource"][];
    };
    Video_Data_Document: {
      data: components["schemas"]["Video_Resource"];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Video_Relationship_Resource"][];
    };
    Video_Relationships_Document: {
      /** @description document's primary data, consist of resource linkage objects */
      data: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Video_Relationship_Resource"][];
    };
    Track_Attributes: {
      /**
       * @description Album item's title
       * @example Kill Jay Z
       */
      title: string;
      /**
       * @description Version of the album's item; complements title
       * @example Kill Jay Z
       */
      version?: string;
      /**
       * @description ISRC code
       * @example TIDAL2274
       */
      isrc: string;
      /**
       * @description Duration expressed in accordance with ISO 8601
       * @example P30M5S
       */
      duration: string;
      /**
       * @description Copyright information
       * @example (p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC.
       */
      copyright?: string;
      /**
       * @description Indicates whether a catalog item consist of any explicit content
       * @example false
       */
      explicit: boolean;
      /**
       * Format: double
       * @description Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
       * @example 0.56
       */
      popularity: number;
      /** @description Defines a catalog item availability e.g. for streaming, DJs, stems */
      availability?: ("STREAM" | "DJ" | "STEM")[];
      mediaTags: string[];
      /** @description Represents available links to something that is related to a catalog item, but external to the TIDAL API */
      externalLinks?: components["schemas"]["External_Link"][];
    };
    /** @description attributes object representing some of the resource's data */
    Track_Relationship: components["schemas"]["Album_Attributes"] | components["schemas"]["Artist_Attributes"] | components["schemas"]["Provider_Attributes"] | components["schemas"]["Track_Attributes"];
    /** @description array of resource objects that are related to the primary data and/or each other */
    Track_Relationship_Resource: {
      attributes?: components["schemas"]["Track_Relationship"];
      /** @description relationships object describing relationships between the resource and other resources */
      relationships?: {
        [key: string]: components["schemas"]["Relationship"];
      };
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description document's primary data */
    Track_Resource: {
      attributes?: components["schemas"]["Track_Attributes"];
      relationships?: components["schemas"]["Available_Track_Relationships"];
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    Tracks_Data_Document: {
      /** @description document's primary data */
      data: components["schemas"]["Track_Resource"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Track_Relationship_Resource"][];
    };
    Track_Data_Document: {
      data: components["schemas"]["Track_Resource"];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Track_Relationship_Resource"][];
    };
    Track_Relationships_Document: {
      /** @description document's primary data, consist of resource linkage objects */
      data: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Track_Relationship_Resource"][];
    };
    /** @description attributes object representing some of the resource's data */
    Provider_Relationship: Record<string, never>;
    /** @description array of resource objects that are related to the primary data and/or each other */
    Provider_Relationship_Resource: {
      attributes?: components["schemas"]["Provider_Relationship"];
      /** @description relationships object describing relationships between the resource and other resources */
      relationships?: {
        [key: string]: components["schemas"]["Relationship"];
      };
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description document's primary data */
    Provider_Resource: {
      attributes?: components["schemas"]["Provider_Attributes"];
      relationships?: components["schemas"]["Available_Provider_Relationships"];
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    Providers_Data_Document: {
      /** @description document's primary data */
      data: components["schemas"]["Provider_Resource"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Provider_Relationship_Resource"][];
    };
    Provider_Data_Document: {
      data: components["schemas"]["Provider_Resource"];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Provider_Relationship_Resource"][];
    };
    /** @description attributes object representing some of the resource's data */
    Artist_Relationship: components["schemas"]["Album_Attributes"] | components["schemas"]["Track_Attributes"] | components["schemas"]["Video_Attributes"] | components["schemas"]["Artist_Attributes"];
    /** @description array of resource objects that are related to the primary data and/or each other */
    Artist_Relationship_Resource: {
      attributes?: components["schemas"]["Artist_Relationship"];
      /** @description relationships object describing relationships between the resource and other resources */
      relationships?: {
        [key: string]: components["schemas"]["Relationship"];
      };
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description document's primary data */
    Artist_Resource: {
      attributes?: components["schemas"]["Artist_Attributes"];
      relationships?: components["schemas"]["Available_Artist_Relationships"];
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    Artists_Data_Document: {
      /** @description document's primary data */
      data: components["schemas"]["Artist_Resource"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Artist_Relationship_Resource"][];
    };
    Artist_Data_Document: {
      data: components["schemas"]["Artist_Resource"];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Artist_Relationship_Resource"][];
    };
    Artist_Relationships_Document: {
      /** @description document's primary data, consist of resource linkage objects */
      data: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Artist_Relationship_Resource"][];
    };
    /** @description attributes object representing some of the resource's data */
    Album_Relationship: components["schemas"]["Artist_Attributes"] | components["schemas"]["Track_Attributes"] | components["schemas"]["Video_Attributes"] | components["schemas"]["Album_Attributes"] | components["schemas"]["Provider_Attributes"];
    /** @description array of resource objects that are related to the primary data and/or each other */
    Album_Relationship_Resource: {
      attributes?: components["schemas"]["Album_Relationship"];
      /** @description relationships object describing relationships between the resource and other resources */
      relationships?: {
        [key: string]: components["schemas"]["Relationship"];
      };
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    /** @description document's primary data */
    Album_Resource: {
      attributes?: components["schemas"]["Album_Attributes"];
      relationships?: components["schemas"]["Available_Album_Relationships"];
      links?: components["schemas"]["Links"];
      /**
       * @description resource unique identifier
       * @example 12345
       */
      id: string;
      /**
       * @description resource unique type
       * @example tracks
       */
      type: string;
    };
    Albums_Data_Document: {
      /** @description document's primary data */
      data: components["schemas"]["Album_Resource"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Album_Relationship_Resource"][];
    };
    Album_Data_Document: {
      data: components["schemas"]["Album_Resource"];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Album_Relationship_Resource"][];
    };
    Album_Relationships_Document: {
      /** @description document's primary data, consist of resource linkage objects */
      data: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
      /** @description array of resource objects that are related to the primary data and/or each other */
      included?: components["schemas"]["Album_Relationship_Resource"][];
    };
    /** @description Available video relationships */
    Available_Video_Relationships: {
      albums?: components["schemas"]["Resource_Relationship"];
      artists?: components["schemas"]["Resource_Relationship"];
      providers?: components["schemas"]["Resource_Relationship"];
    };
    Resource_Relationship: {
      /** @description resource linkage */
      data?: components["schemas"]["Resource_Identifier"][];
      links?: components["schemas"]["Links"];
    };
    /** @description Available track relationships */
    Available_Track_Relationships: {
      albums?: components["schemas"]["Resource_Relationship"];
      artists?: components["schemas"]["Resource_Relationship"];
      similarTracks?: components["schemas"]["Resource_Relationship"];
      providers?: components["schemas"]["Resource_Relationship"];
    };
    /** @description Available artist relationships */
    Available_Artist_Relationships: {
      similarArtists?: components["schemas"]["Resource_Relationship"];
      albums?: components["schemas"]["Resource_Relationship"];
      videos?: components["schemas"]["Resource_Relationship"];
      tracks?: components["schemas"]["Resource_Relationship"];
    };
    /** @description Available album relationships */
    Available_Album_Relationships: {
      artists?: components["schemas"]["Resource_Relationship"];
      similarAlbums?: components["schemas"]["Resource_Relationship"];
      items?: {
        data?: {
            /**
             * @description resource unique identifier
             * @example 12345
             */
            id: string;
            /**
             * @description resource unique type
             * @example tracks
             */
            type: string;
            meta?: {
              /**
               * Format: int32
               * @description volume number
               * @example 1
               */
              volumeNumber: number;
              /**
               * Format: int32
               * @description track number
               * @example 4
               */
              trackNumber: number;
            };
          }[];
        links?: components["schemas"]["Links"];
      };
      providers?: components["schemas"]["Resource_Relationship"];
    };
    /** @description Available provider relationships */
    Available_Provider_Relationships: unknown;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get multiple videos
   * @description Retrieve multiple video details.
   */
  getVideos: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, albums, providers */
        include?: string[];
        /** @description Allows to filter the collection of resources based on id attribute value */
        "filter[id]"?: string[];
        /** @description Allows to filter the collection of resources based on isrc attribute value */
        "filter[isrc]"?: string[];
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Videos_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get single video
   * @description Retrieve video details by TIDAL video id.
   */
  getVideo: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, albums, providers */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL video id
         * @example 75623239
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Video_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: providers
   * @description This endpoint can be used to retrieve a list of video's related providers.
   */
  getVideoProviders: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: providers */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the video
         * @example 75623239
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Video_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: artists
   * @description Retrieve artist details of the related video.
   */
  getVideoArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL video id
         * @example 75623239
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Video_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: albums
   * @description Retrieve album details of the related video.
   */
  getVideoAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: albums */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL video id
         * @example 75623239
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Video_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get multiple tracks
   * @description Retrieve multiple track details.
   */
  getTracks: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, albums, providers, similarTracks */
        include?: string[];
        /** @description Allows to filter the collection of resources based on id attribute value */
        "filter[id]"?: string[];
        /** @description Allows to filter the collection of resources based on isrc attribute value */
        "filter[isrc]"?: string[];
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Tracks_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get single track
   * @description Retrieve track details by TIDAL track id.
   */
  getTrack: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, albums, providers, similarTracks */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL track id
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Track_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: similar tracks
   * @description This endpoint can be used to retrieve a list of tracks similar to the given track.
   */
  getSimilarAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: similarTracks */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the track
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Track_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: providers
   * @description This endpoint can be used to retrieve a list of track's related providers.
   */
  getTrackProviders: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: providers */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the track
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Track_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: artists
   * @description Retrieve artist details of the related track.
   */
  getTrackArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL track id
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Track_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: albums
   * @description Retrieve album details of the related track.
   */
  getTrackAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: albums */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL track id
         * @example 251380837
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Track_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get multiple providers
   * @description Retrieve multiple provider details.
   */
  getProviders: {
    parameters: {
      query?: {
        /** @description Allows the client to customize which related resources should be returned */
        include?: string[];
        /** @description Allows to filter the collection of resources based on id attribute value */
        "filter[id]"?: string[];
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Providers_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get single provider
   * @description Retrieve provider details by TIDAL provider id.
   */
  getProvider: {
    parameters: {
      query?: {
        /** @description Allows the client to customize which related resources should be returned */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL provider id
         * @example 771
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Provider_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get multiple artists
   * @description Retrieve multiple artist details.
   */
  getArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: albums, tracks, videos, similarArtists */
        include?: string[];
        /** @description Allows to filter the collection of resources based on id attribute value */
        "filter[id]"?: string[];
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artists_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get single artist
   * @description Retrieve artist details by TIDAL artist id.
   */
  getArtist: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: albums, tracks, videos, similarArtists */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artist_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: videos
   * @description Retrieve video details by related artist.
   */
  getArtistVideos: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: videos */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artist_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: tracks
   * @description Retrieve track details by related artist.
   */
  getArtistTracks: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: tracks */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artist_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: similar artists
   * @description This endpoint can be used to retrieve a list of artists similar to the given artist.
   */
  getSimilarArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: similarArtists */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the artist
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artist_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: albums
   * @description Retrieve album details of the related artist.
   */
  getArtistAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: albums */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL artist id
         * @example 1566
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Artist_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get multiple albums
   * @description Retrieve multiple album details.
   */
  getAlbums: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, items, providers, similarAlbums */
        include?: string[];
        /** @description Allows to filter the collection of resources based on id attribute value */
        "filter[id]"?: string[];
        /** @description Allows to filter the collection of resources based on barcodeId attribute value */
        "filter[barcodeId]"?: string[];
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Albums_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Get single album
   * @description Retrieve album details by TIDAL album id.
   */
  getAlbum: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists, items, providers, similarAlbums */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Album_Data_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: similar albums
   * @description This endpoint can be used to retrieve a list of albums similar to the given album.
   */
  getSimilarAlbums_1: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: similarAlbums */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the album
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Album_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: providers
   * @description This endpoint can be used to retrieve a list of album's related providers.
   */
  getAlbumProviders: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: providers */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL id of the album
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Album_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: items
   * @description Retrieve album item details.
   */
  getAlbumItems: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: items */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Album_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
  /**
   * Relationship: artists
   * @description Retrieve artist details of the related album.
   */
  getAlbumArtists: {
    parameters: {
      query: {
        /**
         * @description ISO 3166-1 alpha-2 country code
         * @example US
         */
        countryCode: string;
        /** @description Allows the client to customize which related resources should be returned. Available options: artists */
        include?: string[];
      };
      path: {
        /**
         * @description TIDAL album id
         * @example 251380836
         */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/vnd.api+json": unknown;
      };
    };
    responses: {
      /** @description Successfully executed request. */
      200: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Album_Relationships_Document"];
        };
      };
      /** @description Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.). */
      400: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Resource not found. The requested resource is not found. */
      404: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Method not supported. Ensure a proper HTTP method for an HTTP request is used. */
      405: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Not acceptable. The server doesn't support any of the requested by client acceptable content types. */
      406: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header. */
      415: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
      /** @description Internal Server Error. Something went wrong on the server party. */
      500: {
        headers: {
          /**
           * @description Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.
           * @example 5
           */
          "X-RateLimit-Remaining": number;
          /**
           * @description Initial number of tokens, and max number of tokens that can be replenished.
           * @example 20
           */
          "X-RateLimit-Burst-Capacity": number;
          /**
           * @description Number of tokens replenished per second.
           * @example 5
           */
          "X-RateLimit-Replenish-Rate": number;
          /**
           * @description Request cost in tokens.
           * @example 5
           */
          "X-RateLimit-Requested-Tokens": number;
        };
        content: {
          "application/vnd.api+json": components["schemas"]["Error_Document"];
        };
      };
    };
  };
}
